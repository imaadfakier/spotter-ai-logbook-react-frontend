{"ast":null,"code":"var _jsxFileName = \"/Users/imaadfakier/Desktop/incomes/primary/corporate/hiring_process_tracker/spotter_ai/spotter_ai_logbook/react-frontend/src/MapComponent.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect } from \"react\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\n// import \"leaflet-routing-machine\";\n\n// // Fix for Leaflet icon path (Method 1)\n// delete L.Icon.Default.prototype._getIconUrl;\n\n// L.Icon.Default.mergeOptions({\n//   iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n//   iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n//   shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n// });\n\n// const MapComponent = ({\n//   startLat,\n//   startLon,\n//   pickupLat,\n//   pickupLon,\n//   dropoffLat,\n//   dropoffLon,\n// }) => {\n//   useEffect(() => {\n//     setTimeout(() => {\n//       const existingMap = L.DomUtil.get(\"map\");\n//       if (existingMap && existingMap._leaflet_id) {\n//         existingMap._leaflet_id = null;\n//       }\n\n//       const map = L.map(\"map\", {\n//         center: [40.7128, -74.006],\n//         zoom: 8,\n//         scrollWheelZoom: false,\n//       });\n\n//       L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//         attribution:\n//           'Â© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//       }).addTo(map);\n\n//       // Create markers for start, pickup, and dropoff locations\n//       if (startLat && startLon) {\n//         L.marker([startLat, startLon])\n//           .addTo(map)\n//           .bindPopup(\"Start Location\")\n//           .openPopup();\n//       }\n\n//       if (pickupLat && pickupLon) {\n//         L.marker([pickupLat, pickupLon])\n//           .addTo(map)\n//           .bindPopup(\"Pickup Location\")\n//           .openPopup();\n//       }\n\n//       if (dropoffLat && dropoffLon) {\n//         L.marker([dropoffLat, dropoffLon])\n//           .addTo(map)\n//           .bindPopup(\"Dropoff Location\")\n//           .openPopup();\n//       }\n\n//       //remove routing functions as the values were dummy\n\n//       return () => {\n//         map.remove();\n//       };\n//     }, 0);\n//   }, [startLat, startLon, pickupLat, pickupLon, dropoffLat, dropoffLon]);\n\n//   return <div id=\"map\" style={{ height: \"500px\" }}></div>;\n// };\n\n// export default MapComponent;\n\nimport React, { useState, useEffect } from \"react\";\nimport MapComponent from \"./MapComponent\";\nimport \"./App.css\";\nimport DailyLogSheet from \"./DailyLogSheet\";\nimport TripForm from \"./TripForm\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [logEntries, setLogEntries] = useState([]);\n  const [tripDetails, setTripDetails] = useState(null);\n  const [startLat, setStartLat] = useState(null);\n  const [startLon, setStartLon] = useState(null);\n  const [pickupLat, setPickupLat] = useState(null);\n  const [pickupLon, setPickupLon] = useState(null);\n  const [dropoffLat, setDropoffLat] = useState(null);\n  const [dropoffLon, setDropoffLon] = useState(null);\n  const handleFormSubmit = async tripData => {\n    // Convert camelCase keys to snake_case\n    const convertToSnakeCase = obj => {\n      const newObj = {};\n      for (const key in obj) {\n        if (obj.hasOwnProperty(key)) {\n          const snakeCaseKey = key.replace(/([A-Z])/g, \"_$1\").toLowerCase();\n          newObj[snakeCaseKey] = obj[key];\n        }\n      }\n      return newObj;\n    };\n    const apiUrl = \"http://localhost:8000/api/trips/\"; //Django server endpoint\n    try {\n      // First, check if trip exists\n      const checkTripResponse = await fetch(`${apiUrl}check_existing/`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(convertToSnakeCase(tripData))\n      });\n      if (!checkTripResponse.ok) {\n        console.error(\"Error checking existing trip:\", checkTripResponse.status);\n        return;\n      }\n      const checkTripData = await checkTripResponse.json();\n      let tripId;\n      if (checkTripData.exists) {\n        tripId = checkTripData.trip.id;\n        setTripDetails(checkTripData.trip);\n\n        //SetLogs\n        const logsDataResponse = await fetch(`${apiUrl}${tripId}/logs/`);\n        if (!logsDataResponse.ok) {\n          console.error(\"Error fetching logs:\", logsDataResponse.status);\n          return;\n        }\n        const logsData = await logsDataResponse.json();\n        setLogEntries(logsData || []);\n        // Call the state setter methods to assign these states (to make the map)\n        setStartLat(34.0522);\n        setStartLon(-118.2437);\n        setPickupLat(41.8781);\n        setPickupLon(-87.6298);\n        setDropoffLat(40.7128);\n        setDropoffLon(-74.006);\n      } else {\n        // First, create the trip in the backend\n        const response = await fetch(`${apiUrl}`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(tripData)\n        });\n        if (!response.ok) {\n          console.error(\"Error creating trip:\", response.status);\n          return;\n        }\n        const newTrip = await response.json();\n        tripId = newTrip.id;\n        setTripDetails(newTrip);\n        // Then, generate logs for the trip\n        const logsResponse = await fetch(`${apiUrl}${tripId}/generate_logs/`, {\n          method: \"POST\"\n        });\n        if (!logsResponse.ok) {\n          console.error(\"Error generating logs:\", logsResponse.status);\n          return;\n        }\n\n        // Finally, fetch the generated logs\n        const logsDataResponse = await fetch(`${apiUrl}${tripId}/logs/`);\n        if (!logsDataResponse.ok) {\n          console.error(\"Error fetching logs:\", logsDataResponse.status);\n          return;\n        }\n        const logsData = await logsDataResponse.json();\n        setLogEntries(logsData);\n        // Call the state setter methods to assign these states (to make the map)\n        setStartLat(34.0522);\n        setStartLon(-118.2437);\n        setPickupLat(41.8781);\n        setPickupLon(-87.6298);\n        setDropoffLat(40.7128);\n        setDropoffLon(-74.006);\n      }\n    } catch (error) {\n      console.error(\"There was an issue\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Trucker Logbook App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(TripForm, {\n          onSubmit: handleFormSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: tripDetails && /*#__PURE__*/_jsxDEV(MapComponent, {\n          startLat: startLat,\n          startLon: startLon,\n          pickupLat: pickupLat,\n          pickupLon: pickupLon,\n          dropoffLat: dropoffLat,\n          dropoffLon: dropoffLon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: logEntries.length > 0 && /*#__PURE__*/_jsxDEV(DailyLogSheet, {\n          logEntries: logEntries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"J4o7ju/jBpxIX8Cz+CxuNzEmIaA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MapComponent","DailyLogSheet","TripForm","Container","Row","Col","jsxDEV","_jsxDEV","App","_s","logEntries","setLogEntries","tripDetails","setTripDetails","startLat","setStartLat","startLon","setStartLon","pickupLat","setPickupLat","pickupLon","setPickupLon","dropoffLat","setDropoffLat","dropoffLon","setDropoffLon","handleFormSubmit","tripData","convertToSnakeCase","obj","newObj","key","hasOwnProperty","snakeCaseKey","replace","toLowerCase","apiUrl","checkTripResponse","fetch","method","headers","body","JSON","stringify","ok","console","error","status","checkTripData","json","tripId","exists","trip","id","logsDataResponse","logsData","response","newTrip","logsResponse","children","fileName","_jsxFileName","lineNumber","columnNumber","md","onSubmit","length","_c","$RefreshReg$"],"sources":["/Users/imaadfakier/Desktop/incomes/primary/corporate/hiring_process_tracker/spotter_ai/spotter_ai_logbook/react-frontend/src/MapComponent.jsx"],"sourcesContent":["// import React, { useEffect } from \"react\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\n// import \"leaflet-routing-machine\";\n\n// // Fix for Leaflet icon path (Method 1)\n// delete L.Icon.Default.prototype._getIconUrl;\n\n// L.Icon.Default.mergeOptions({\n//   iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n//   iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n//   shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n// });\n\n// const MapComponent = ({\n//   startLat,\n//   startLon,\n//   pickupLat,\n//   pickupLon,\n//   dropoffLat,\n//   dropoffLon,\n// }) => {\n//   useEffect(() => {\n//     setTimeout(() => {\n//       const existingMap = L.DomUtil.get(\"map\");\n//       if (existingMap && existingMap._leaflet_id) {\n//         existingMap._leaflet_id = null;\n//       }\n\n//       const map = L.map(\"map\", {\n//         center: [40.7128, -74.006],\n//         zoom: 8,\n//         scrollWheelZoom: false,\n//       });\n\n//       L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//         attribution:\n//           'Â© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//       }).addTo(map);\n\n//       // Create markers for start, pickup, and dropoff locations\n//       if (startLat && startLon) {\n//         L.marker([startLat, startLon])\n//           .addTo(map)\n//           .bindPopup(\"Start Location\")\n//           .openPopup();\n//       }\n\n//       if (pickupLat && pickupLon) {\n//         L.marker([pickupLat, pickupLon])\n//           .addTo(map)\n//           .bindPopup(\"Pickup Location\")\n//           .openPopup();\n//       }\n\n//       if (dropoffLat && dropoffLon) {\n//         L.marker([dropoffLat, dropoffLon])\n//           .addTo(map)\n//           .bindPopup(\"Dropoff Location\")\n//           .openPopup();\n//       }\n\n//       //remove routing functions as the values were dummy\n\n//       return () => {\n//         map.remove();\n//       };\n//     }, 0);\n//   }, [startLat, startLon, pickupLat, pickupLon, dropoffLat, dropoffLon]);\n\n//   return <div id=\"map\" style={{ height: \"500px\" }}></div>;\n// };\n\n// export default MapComponent;\n\n\n\n\n\nimport React, { useState, useEffect } from \"react\";\nimport MapComponent from \"./MapComponent\";\nimport \"./App.css\";\nimport DailyLogSheet from \"./DailyLogSheet\";\nimport TripForm from \"./TripForm\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nfunction App() {\n  const [logEntries, setLogEntries] = useState([]);\n  const [tripDetails, setTripDetails] = useState(null);\n const [startLat, setStartLat] = useState(null);\n  const [startLon, setStartLon] = useState(null);\n    const [pickupLat, setPickupLat] = useState(null);\n  const [pickupLon, setPickupLon] = useState(null);\n    const [dropoffLat, setDropoffLat] = useState(null);\n  const [dropoffLon, setDropoffLon] = useState(null);\n\n  const handleFormSubmit = async (tripData) => {\n    // Convert camelCase keys to snake_case\n    const convertToSnakeCase = (obj) => {\n      const newObj = {};\n      for (const key in obj) {\n        if (obj.hasOwnProperty(key)) {\n          const snakeCaseKey = key.replace(/([A-Z])/g, \"_$1\").toLowerCase();\n          newObj[snakeCaseKey] = obj[key];\n        }\n      }\n      return newObj;\n    };\n\n    const apiUrl = \"http://localhost:8000/api/trips/\"; //Django server endpoint\n    try {\n      // First, check if trip exists\n      const checkTripResponse = await fetch(`${apiUrl}check_existing/`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(convertToSnakeCase(tripData)),\n      });\n\n      if (!checkTripResponse.ok) {\n        console.error(\n          \"Error checking existing trip:\",\n          checkTripResponse.status\n        );\n        return;\n      }\n      const checkTripData = await checkTripResponse.json();\n\n      let tripId;\n      if (checkTripData.exists) {\n        tripId = checkTripData.trip.id;\n        setTripDetails(checkTripData.trip);\n\n                //SetLogs\n        const logsDataResponse = await fetch(`${apiUrl}${tripId}/logs/`);\n        if (!logsDataResponse.ok) {\n          console.error(\"Error fetching logs:\", logsDataResponse.status);\n          return;\n        }\n        const logsData = await logsDataResponse.json();\n        setLogEntries(logsData || []);\n            // Call the state setter methods to assign these states (to make the map)\n          setStartLat(34.0522);\n        setStartLon(-118.2437);\n             setPickupLat(41.8781);\n        setPickupLon(-87.6298);\n             setDropoffLat(40.7128);\n        setDropoffLon(-74.006);\n\n      } else {\n        // First, create the trip in the backend\n        const response = await fetch(`${apiUrl}`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(tripData),\n        });\n\n        if (!response.ok) {\n          console.error(\"Error creating trip:\", response.status);\n          return;\n        }\n        const newTrip = await response.json();\n        tripId = newTrip.id;\n        setTripDetails(newTrip);\n                // Then, generate logs for the trip\n                const logsResponse = await fetch(\n                  `${apiUrl}${tripId}/generate_logs/`,\n                  {\n                    method: \"POST\",\n                  }\n                );\n\n                if (!logsResponse.ok) {\n                  console.error(\"Error generating logs:\", logsResponse.status);\n                  return;\n                }\n\n                // Finally, fetch the generated logs\n                const logsDataResponse = await fetch(`${apiUrl}${tripId}/logs/`);\n                if (!logsDataResponse.ok) {\n                  console.error(\"Error fetching logs:\", logsDataResponse.status);\n                  return;\n                }\n\n                const logsData = await logsDataResponse.json();\n                setLogEntries(logsData);\n                             // Call the state setter methods to assign these states (to make the map)\n          setStartLat(34.0522);\n        setStartLon(-118.2437);\n             setPickupLat(41.8781);\n        setPickupLon(-87.6298);\n             setDropoffLat(40.7128);\n        setDropoffLon(-74.006);\n\n      }\n    } catch (error) {\n      console.error(\"There was an issue\", error);\n    }\n  };\n\n  return (\n    <Container>\n      <h1>Trucker Logbook App</h1>\n      <Row>\n        <Col md={6}>\n          <TripForm onSubmit={handleFormSubmit} />\n        </Col>\n        <Col md={6}>\n          {tripDetails && (\n            <MapComponent\n              startLat={startLat}\n              startLon={startLon}\n              pickupLat = {pickupLat}\n              pickupLon = {pickupLon}\n               dropoffLat = {dropoffLat}\n              dropoffLon = {dropoffLon}\n            />\n          )}\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          {logEntries.length > 0 && <DailyLogSheet logEntries={logEntries} />}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}