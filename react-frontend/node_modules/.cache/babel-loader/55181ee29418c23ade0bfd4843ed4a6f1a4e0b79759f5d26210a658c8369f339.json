{"ast":null,"code":"var _jsxFileName = \"/Users/imaadfakier/Desktop/incomes/primary/corporate/hiring_process_tracker/spotter_ai/spotter_ai_logbook/react-frontend/src/MapComponent.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useRef } from \"react\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\n// import \"leaflet-routing-machine\";\n// import \"./MapComponent.css\";\n\n// // Fix for Leaflet icon path (Method 1)\n// delete L.Icon.Default.prototype._getIconUrl;\n\n// L.Icon.Default.mergeOptions({\n//   iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n//   iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n//   shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n// });\n\n// const MapComponent = ({ startLocation, pickupLocation, dropoffLocation }) => {\n//   // console.log(startLocation, pickupLocation, dropoffLocation);\n\n//   const mapRef = useRef(null); // Ref to the map container div\n//   const mapInstance = useRef(null); // Ref to store the leaflet map instance\n\n//   useEffect(() => {\n//     const createMap = async () => {\n//       if (mapRef.current) {\n//         // Check if the map container exists AND the map hasn't been initialized yet using L.DomUtil.get\n//         const existingMap = L.DomUtil.get(\"map\"); // Use L.DomUtil.get to check if map already exists\n\n//         if (!existingMap?._leaflet_id) {\n//           // Only initialize if the map hasn't been initialized on this element\n//           const map = L.map(mapRef.current, {\n//             center: [40.7128, -74.006],\n//             zoom: 8,\n//             scrollWheelZoom: false,\n//           });\n\n//           L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//             attribution:\n//               '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//           }).addTo(map);\n\n//           // Geocoding function (replace with a real geocoding service)\n//           const geocode = async (location) => {\n//             console.warn(\n//               \"Geocoding is not fully implemented -- using a dummy lat/lon value\"\n//             );\n//             switch (location) {\n//               case \"Miami, FL\":\n//                 return [25.7617, -80.1918]; // Miami coordinates\n//               case \"Orlando, FL\":\n//                 return [28.5383, -81.3792]; // Orlando coordinates\n//               case \"Jacksonville, FL\":\n//                 return [30.3322, -81.6557]; // Jacksonville coordinates\n//               default:\n//                 return null;\n//             }\n//           };\n\n//           const createRoutingControl = async () => {\n//             const startCoords = await geocode(startLocation);\n//             const pickupCoords = await geocode(pickupLocation);\n//             const dropoffCoords = await geocode(dropoffLocation);\n\n//             if (!startCoords || !pickupCoords || !dropoffCoords) {\n//               console.error(\"Could not geocode all locations\");\n//               return;\n//             }\n\n//             L.Routing.control({\n//               waypoints: [\n//                 L.latLng(startCoords),\n//                 L.latLng(pickupCoords),\n//                 L.latLng(dropoffCoords),\n//               ],\n//               routeWhileDragging: false,\n//               showAlternatives: false,\n//               serviceUrl: \"http://router.project-osrm.org/route/v1\",\n//             }).addTo(map);\n//           };\n\n//           await createRoutingControl(); // Make sure the routing is added after geocoding\n\n//           mapInstance.current = map; // Store the map instance in the ref\n//         } else {\n//           console.log(\"Map already initialized, skipping initialization.\");\n//         }\n//       }\n//     };\n\n//     createMap();\n\n//     return () => {\n//       if (mapInstance.current) {\n//         mapInstance.current.remove(); // Clean up the map on unmount\n//       }\n//     };\n//   }, [startLocation, pickupLocation, dropoffLocation]); // Dependencies for the useEffect\n\n//   return <div id=\"map\" ref={mapRef} style={{ height: \"500px\" }}></div>;\n// };\n\n// export default MapComponent;\n\n// import React, { useEffect, useRef } from \"react\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\n// import \"leaflet-routing-machine\";\n// import \"./MapComponent.css\";\n\n// // Fix for Leaflet icon path (Method 1)\n// delete L.Icon.Default.prototype._getIconUrl;\n\n// L.Icon.Default.mergeOptions({\n//   iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n//   iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n//   shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n// });\n\n// const MapComponent = ({ logsData, tripId }) => {\n//   const mapRef = useRef(null);\n//   const mapInstance = useRef(null);\n\n//   useEffect(() => {\n//     const createMap = async () => {\n//       if (!mapRef.current) return; // Handle null mapRef.current and only continue if present\n\n//       const existingMap = L.DomUtil.get(\"map\");\n//       if (!existingMap?._leaflet_id) {\n//         const map = L.map(mapRef.current, {\n//           center: [40.7128, -74.006],\n//           zoom: 8,\n//           scrollWheelZoom: false,\n//         });\n\n//         L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//           attribution:\n//             '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//         }).addTo(map);\n\n//         if (logsData != null && logsData.length > 0) {\n//           const startLog = logsData?.[0];\n//           const pickupLog = logsData?.[8];\n//           const dropoffLog = logsData?.[10];\n\n//           if (!startLog || !pickupLog || !dropoffLog) {\n//             console.error(\n//               \"Missing log entries for start, pickup, or dropoff location.  Length of the logs is:\",\n//               logsData.length\n//             );\n//             return;\n//           }\n\n//           const startCoords = [startLog.latitude, startLog.longitude];\n//           const pickupCoords = [pickupLog.latitude, pickupLog.longitude];\n//           const dropoffCoords = [dropoffLog.latitude, dropoffLog.longitude];\n\n//           // Create Routing Control\n//           L.Routing.control({\n//             waypoints: [\n//               L.latLng(startCoords),\n//               L.latLng(pickupCoords),\n//               L.latLng(dropoffCoords),\n//             ],\n//             routeWhileDragging: false,\n//             showAlternatives: false,\n//             serviceUrl: \"http://router.project-osrm.org/route/v1\",\n//           }).addTo(map);\n//         }\n\n//         mapInstance.current = map;\n//       } else {\n//         console.log(\"Map already initialized, skipping initialization.\");\n//       }\n//     };\n\n//     createMap();\n\n//     return () => {\n//       if (mapInstance.current) {\n//         mapInstance.current.remove();\n//         mapInstance.current = null;\n//       }\n//     };\n//   }, [logsData]);\n\n//   return <div id=\"map\" ref={mapRef} style={{ height: \"500px\" }}></div>;\n// };\n\n// export default MapComponent;\n\n// import React, { useEffect, useRef } from \"react\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\n// import \"leaflet-routing-machine\";\n// import \"./MapComponent.css\";\n\n// // Fix for Leaflet icon path (Method 1)\n// delete L.Icon.Default.prototype._getIconUrl;\n\n// L.Icon.Default.mergeOptions({\n//   iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n//   iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n//   shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n// });\n\n// const MapComponent = ({ logsData, tripId }) => {\n//   const mapRef = useRef(null);\n//   const mapInstance = useRef(null);\n\n//   useEffect(() => {\n//     const createMap = async () => {\n//       if (!mapRef.current) return; // Handle null mapRef.current and only continue if present\n\n//       const existingMap = L.DomUtil.get(\"map\");\n//       if (!existingMap?._leaflet_id) {\n//         const map = L.map(mapRef.current, {\n//           center: [40.7128, -74.006],\n//           zoom: 6, // Increased zoom out for better visibility of longer routes\n//           scrollWheelZoom: false,\n//         });\n\n//         L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//           attribution:\n//             '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//         }).addTo(map);\n\n//         if (logsData != null && logsData.length > 0) {\n//           const startLog = logsData?.[0];\n//           const pickupLog = logsData?.[9];\n//           const dropoffLog = logsData?.[10];\n\n//           if (!startLog || !pickupLog || !dropoffLog) {\n//             console.error(\n//               \"Missing log entries for start, pickup, or dropoff location.  Length of the logs is:\",\n//               logsData.length\n//             );\n//             return;\n//           }\n\n//           const startCoords = [startLog.latitude, startLog.longitude];\n//           const pickupCoords = [pickupLog.latitude, pickupLog.longitude];\n//           const dropoffCoords = [dropoffLog.latitude, dropoffLog.longitude];\n\n//           // Add intermediate location markers\n//           logsData\n//             .map((log, index) => {\n//               if (index !== 0 && index !== 9 && index !== 10) {\n//                 // Exclude start, pickup, and dropoff locations\n//                 return L.marker([log.latitude, log.longitude])\n//                   .addTo(map)\n//                   .bindPopup(\n//                     `${log.location}<br>Duty Status: ${log.duty_status}<br>Remarks: ${log.remarks}`\n//                   );\n//               }\n//               return null;\n//             })\n//             .filter((waypoint) => waypoint !== null);\n\n//           // Create Routing Control (with intermediate waypoints)\n//           L.Routing.control({\n//             waypoints: [\n//               L.latLng(startCoords),\n//               L.latLng(pickupCoords),\n//               L.latLng(dropoffCoords),\n//             ],\n//             routeWhileDragging: false,\n//             showAlternatives: false,\n//             serviceUrl: \"http://router.project-osrm.org/route/v1\",\n//           }).addTo(map);\n//         }\n\n//         mapInstance.current = map;\n//       } else {\n//         console.log(\"Map already initialized, skipping initialization.\");\n//       }\n//     };\n\n//     createMap();\n\n//     return () => {\n//       if (mapInstance.current) {\n//         mapInstance.current.remove();\n//         mapInstance.current = null;\n//       }\n//     };\n//   }, [logsData]);\n\n//   return <div id=\"map\" ref={mapRef} style={{ height: \"500px\" }}></div>;\n// };\n\n// export default MapComponent;\n\n// ----------------- Routing for only the start, pickup and dropoff locations -----------------\n// import React, { useEffect, useRef } from \"react\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\n// import \"leaflet-routing-machine\";\n// import \"./MapComponent.css\";\n\n// // Fix for Leaflet icon path (Method 1)\n// delete L.Icon.Default.prototype._getIconUrl;\n\n// L.Icon.Default.mergeOptions({\n//   iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n//   iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n//   shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n// });\n\n// const MapComponent = ({ logsData, tripId }) => {\n//   const mapRef = useRef(null);\n//   const mapInstance = useRef(null);\n\n//   useEffect(() => {\n//     const createMap = async () => {\n//       if (!mapRef.current) return;\n\n//       const existingMap = L.DomUtil.get(\"map\");\n//       if (!existingMap?._leaflet_id) {\n//         const map = L.map(mapRef.current, {\n//           center: [40.7128, -74.006],\n//           zoom: 6,\n//           scrollWheelZoom: false,\n//         });\n\n//         L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//           attribution:\n//             '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//         }).addTo(map);\n\n//         if (logsData != null && logsData.length > 0) {\n//           const startLog = logsData[0];\n//           const pickupLog = logsData[9];\n//           const dropoffLog = logsData[10];\n\n//           if (!startLog || !pickupLog || !dropoffLog) {\n//             console.error(\n//               \"Missing log entries for start, pickup, or dropoff location. Length of the logs is:\",\n//               logsData.length\n//             );\n//             return;\n//           }\n\n//           const startCoords = [startLog.latitude, startLog.longitude];\n//           const pickupCoords = [pickupLog.latitude, pickupLog.longitude];\n//           const dropoffCoords = [dropoffLog.latitude, dropoffLog.longitude];\n\n//           // Create custom icons\n//           const startIcon = L.icon({\n//             iconUrl:\n//               \"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png\", // green\n//             shadowUrl:\n//               \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n//             iconSize: [25, 41],\n//             iconAnchor: [12, 41],\n//             popupAnchor: [1, -34],\n//             shadowSize: [41, 41],\n//           });\n\n//           const pickupIcon = L.icon({\n//             iconUrl:\n//               \"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png\", // blue\n//             shadowUrl:\n//               \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n//             iconSize: [25, 41],\n//             iconAnchor: [12, 41],\n//             popupAnchor: [1, -34],\n//             shadowSize: [41, 41],\n//           });\n\n//           const dropoffIcon = L.icon({\n//             iconUrl:\n//               \"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png\", // red\n//             shadowUrl:\n//               \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n//             iconSize: [25, 41],\n//             iconAnchor: [12, 41],\n//             popupAnchor: [1, -34],\n//             shadowSize: [41, 41],\n//           });\n\n//           // Add start, pickup, and dropoff markers\n//           L.marker(startCoords, { icon: startIcon })\n//             .addTo(map)\n//             .bindPopup(\n//               `${startLog.location}<br>Duty Status: ${startLog.duty_status}<br>Remarks: ${startLog.remarks}`\n//             );\n\n//           L.marker(pickupCoords, { icon: pickupIcon })\n//             .addTo(map)\n//             .bindPopup(\n//               `${pickupLog.location}<br>Duty Status: ${pickupLog.duty_status}<br>Remarks: ${pickupLog.remarks}`\n//             );\n\n//           L.marker(dropoffCoords, { icon: dropoffIcon })\n//             .addTo(map)\n//             .bindPopup(\n//               `${dropoffLog.location}<br>Duty Status: ${dropoffLog.duty_status}<br>Remarks: ${dropoffLog.remarks}`\n//             );\n\n//           // Add intermediate location markers\n//           logsData.forEach((log, index) => {\n//             if (index !== 0 && index !== 9 && index !== 10) {\n//               // Exclude start, pickup, and dropoff locations\n//               L.marker([log.latitude, log.longitude])\n//                 .addTo(map)\n//                 .bindPopup(\n//                   `${log.location}<br>Duty Status: ${log.duty_status}<br>Remarks: ${log.remarks}`\n//                 );\n//             }\n//           });\n\n//           // Create Routing Control (with intermediate waypoints)\n//           L.Routing.control({\n//             waypoints: [\n//               L.latLng(startCoords),\n//               L.latLng(pickupCoords),\n//               L.latLng(dropoffCoords),\n//             ],\n//             routeWhileDragging: false,\n//             showAlternatives: false,\n//             serviceUrl: \"http://router.project-osrm.org/route/v1\",\n//           }).addTo(map);\n//         }\n\n//         mapInstance.current = map;\n//       } else {\n//         console.log(\"Map already initialized, skipping initialization.\");\n//       }\n//     };\n\n//     createMap();\n\n//     return () => {\n//       if (mapInstance.current) {\n//         mapInstance.current.remove();\n//         mapInstance.current = null;\n//       }\n//     };\n//   }, [logsData]);\n\n//   return <div id=\"map\" ref={mapRef} style={{ height: \"500px\" }}></div>;\n// };\n\n// export default MapComponent;\n\n// ----------------- Routing for the start, pickup and dropoff locations + all other stops -----------------\n// import React, { useEffect, useRef } from \"react\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\n// import \"leaflet-routing-machine\";\n// import \"./MapComponent.css\";\n\n// // Fix for Leaflet icon path (Method 1)\n// delete L.Icon.Default.prototype._getIconUrl;\n\n// L.Icon.Default.mergeOptions({\n//   iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n//   iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n//   shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n// });\n\n// const MapComponent = ({ logsData, tripId }) => {\n//   const mapRef = useRef(null);\n//   const mapInstance = useRef(null);\n\n//   useEffect(() => {\n//     const createMap = async () => {\n//       if (!mapRef.current) return;\n\n//       const existingMap = L.DomUtil.get(\"map\");\n//       if (!existingMap?._leaflet_id) {\n//         const map = L.map(mapRef.current, {\n//           center: [40.7128, -74.006],\n//           zoom: 6,\n//           scrollWheelZoom: false,\n//         });\n\n//         L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//           attribution:\n//             '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//         }).addTo(map);\n\n//         if (logsData != null && logsData.length > 0) {\n//           const startLog = logsData[0];\n//           const pickupLog = logsData[9];\n//           const dropoffLog = logsData[10];\n\n//           if (!startLog || !pickupLog || !dropoffLog) {\n//             console.error(\n//               \"Missing log entries for start, pickup, or dropoff location. Length of the logs is:\",\n//               logsData.length\n//             );\n//             return;\n//           }\n\n//           const startCoords = [startLog.latitude, startLog.longitude];\n//           const pickupCoords = [pickupLog.latitude, pickupLog.longitude];\n//           const dropoffCoords = [dropoffLog.latitude, dropoffLog.longitude];\n\n//           // Create custom icons\n//           const startIcon = L.icon({\n//             iconUrl:\n//               \"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png\", // green\n//             shadowUrl:\n//               \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n//             iconSize: [25, 41],\n//             iconAnchor: [12, 41],\n//             popupAnchor: [1, -34],\n//             shadowSize: [41, 41],\n//           });\n\n//           const pickupIcon = L.icon({\n//             iconUrl:\n//               \"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png\", // blue\n//             shadowUrl:\n//               \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n//             iconSize: [25, 41],\n//             iconAnchor: [12, 41],\n//             popupAnchor: [1, -34],\n//             shadowSize: [41, 41],\n//           });\n\n//           const dropoffIcon = L.icon({\n//             iconUrl:\n//               \"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png\", // red\n//             shadowUrl:\n//               \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n//             iconSize: [25, 41],\n//             iconAnchor: [12, 41],\n//             popupAnchor: [1, -34],\n//             shadowSize: [41, 41],\n//           });\n\n//           // Add start, pickup, and dropoff markers\n//           const startMarker = L.marker(startCoords, { icon: startIcon })\n//             .addTo(map)\n//             .bindPopup(\n//               `${startLog.location}<br>Duty Status: ${startLog.duty_status}<br>Remarks: ${startLog.remarks}`\n//             );\n\n//           const pickupMarker = L.marker(pickupCoords, { icon: pickupIcon })\n//             .addTo(map)\n//             .bindPopup(\n//               `${pickupLog.location}<br>Duty Status: ${pickupLog.duty_status}<br>Remarks: ${pickupLog.remarks}`\n//             );\n\n//           const dropoffMarker = L.marker(dropoffCoords, { icon: dropoffIcon })\n//             .addTo(map)\n//             .bindPopup(\n//               `${dropoffLog.location}<br>Duty Status: ${dropoffLog.duty_status}<br>Remarks: ${dropoffLog.remarks}`\n//             );\n\n//           // Open popup on mouseover, close on mouseout\n//           startMarker.on(\"mouseover\", function () {\n//             this.openPopup();\n//           });\n//           startMarker.on(\"mouseout\", function () {\n//             this.closePopup();\n//           });\n\n//           pickupMarker.on(\"mouseover\", function () {\n//             this.openPopup();\n//           });\n//           pickupMarker.on(\"mouseout\", function () {\n//             this.closePopup();\n//           });\n\n//           dropoffMarker.on(\"mouseover\", function () {\n//             this.openPopup();\n//           });\n//           dropoffMarker.on(\"mouseout\", function () {\n//             this.closePopup();\n//           });\n\n//           // Add intermediate location markers\n//           logsData.forEach((log, index) => {\n//             if (index !== 0 && index !== 9 && index !== 10) {\n//               // Exclude start, pickup, and dropoff locations\n//               const intermediateMarker = L.marker([log.latitude, log.longitude])\n//                 .addTo(map)\n//                 .bindPopup(\n//                   `${log.location}<br>Duty Status: ${log.duty_status}<br>Remarks: ${log.remarks}`\n//                 );\n\n//               intermediateMarker.on(\"mouseover\", function () {\n//                 this.openPopup();\n//               });\n//               intermediateMarker.on(\"mouseout\", function () {\n//                 this.closePopup();\n//               });\n//             }\n//           });\n\n//           // Create Waypoints including all Stops\n//           const waypoints = logsData.map((log) =>\n//             L.latLng(log.latitude, log.longitude)\n//           );\n\n//           // Create Routing Control (with intermediate waypoints)\n//           L.Routing.control({\n//             waypoints: waypoints,\n//             routeWhileDragging: false,\n//             showAlternatives: false,\n//             serviceUrl: \"http://router.project-osrm.org/route/v1\",\n//           }).addTo(map);\n//         }\n\n//         mapInstance.current = map;\n//       } else {\n//         console.log(\"Map already initialized, skipping initialization.\");\n//       }\n//     };\n\n//     createMap();\n\n//     return () => {\n//       if (mapInstance.current) {\n//         mapInstance.current.remove();\n//         mapInstance.current = null;\n//       }\n//     };\n//   }, [logsData]);\n\n//   return <div id=\"map\" ref={mapRef} style={{ height: \"500px\" }}></div>;\n// };\n\n// export default MapComponent;\n\nimport React, { useEffect, useRef } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\nimport \"leaflet-routing-machine\";\nimport \"./MapComponent.css\";\n\n// Fix Leaflet icon path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\")\n});\nconst MapComponent = ({\n  logsData\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const mapInstance = useRef(null);\n  const markersRef = useRef([]);\n  useEffect(() => {\n    if (!mapRef.current) return;\n    if (!mapInstance.current) {\n      mapInstance.current = L.map(mapRef.current, {\n        center: [40.7128, -74.006],\n        zoom: 6,\n        scrollWheelZoom: false\n      });\n      L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n        attribution: '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      }).addTo(mapInstance.current);\n    }\n    const map = mapInstance.current;\n\n    // Remove previous markers\n    markersRef.current.forEach(marker => marker.remove());\n    markersRef.current = [];\n    if (logsData && logsData.length > 0) {\n      const startLog = logsData[0];\n      const pickupLog = logsData[9];\n      const dropoffLog = logsData[10];\n      if (!startLog || !pickupLog || !dropoffLog) {\n        console.error(\"Missing log entries for start, pickup, or dropoff location.\");\n        return;\n      }\n      const startCoords = [startLog.latitude, startLog.longitude];\n      const pickupCoords = [pickupLog.latitude, pickupLog.longitude];\n      const dropoffCoords = [dropoffLog.latitude, dropoffLog.longitude];\n\n      // Custom icons\n      const createIcon = color => L.icon({\n        iconUrl: `https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-${color}.png`,\n        shadowUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n        iconSize: [25, 41],\n        iconAnchor: [12, 41],\n        popupAnchor: [1, -34],\n        shadowSize: [41, 41]\n      });\n      const startIcon = createIcon(\"green\");\n      const pickupIcon = createIcon(\"blue\");\n      const dropoffIcon = createIcon(\"red\");\n\n      // Add markers with hover effect\n      const createMarker = (coords, icon, log) => {\n        const marker = L.marker(coords, {\n          icon\n        }).addTo(map);\n        const popupContent = `${log.location}<br>Duty Status: ${log.duty_status}<br>Remarks: ${log.remarks}`;\n        marker.bindPopup(popupContent, {\n          closeButton: false\n        });\n        marker.on(\"mouseover\", function () {\n          this.openPopup();\n        });\n        marker.on(\"mouseout\", function () {\n          this.closePopup();\n        });\n        markersRef.current.push(marker);\n        return marker;\n      };\n      createMarker(startCoords, startIcon, startLog);\n      createMarker(pickupCoords, pickupIcon, pickupLog);\n      createMarker(dropoffCoords, dropoffIcon, dropoffLog);\n\n      // Add intermediate markers\n      logsData.forEach((log, index) => {\n        if (index !== 0 && index !== 9 && index !== 10) {\n          createMarker([log.latitude, log.longitude], L.icon(), log);\n        }\n      });\n\n      // Routing control\n      L.Routing.control({\n        waypoints: [L.latLng(startCoords), L.latLng(pickupCoords), L.latLng(dropoffCoords)],\n        routeWhileDragging: false,\n        showAlternatives: false,\n        serviceUrl: \"http://router.project-osrm.org/route/v1\"\n      }).addTo(map);\n    }\n    return () => {\n      markersRef.current.forEach(marker => marker.remove());\n      markersRef.current = [];\n    };\n  }, [logsData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    ref: mapRef,\n    style: {\n      height: \"500px\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 748,\n    columnNumber: 10\n  }, this);\n};\n_s(MapComponent, \"ddIzN8/UIQWrVDyooxl6ATcSiXQ=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useRef","L","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","MapComponent","logsData","_s","mapRef","mapInstance","markersRef","current","map","center","zoom","scrollWheelZoom","tileLayer","attribution","addTo","forEach","marker","remove","length","startLog","pickupLog","dropoffLog","console","error","startCoords","latitude","longitude","pickupCoords","dropoffCoords","createIcon","color","icon","iconSize","iconAnchor","popupAnchor","shadowSize","startIcon","pickupIcon","dropoffIcon","createMarker","coords","log","popupContent","location","duty_status","remarks","bindPopup","closeButton","on","openPopup","closePopup","push","index","Routing","control","waypoints","latLng","routeWhileDragging","showAlternatives","serviceUrl","id","ref","style","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/imaadfakier/Desktop/incomes/primary/corporate/hiring_process_tracker/spotter_ai/spotter_ai_logbook/react-frontend/src/MapComponent.jsx"],"sourcesContent":["// import React, { useEffect, useRef } from \"react\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\n// import \"leaflet-routing-machine\";\n// import \"./MapComponent.css\";\n\n// // Fix for Leaflet icon path (Method 1)\n// delete L.Icon.Default.prototype._getIconUrl;\n\n// L.Icon.Default.mergeOptions({\n//   iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n//   iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n//   shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n// });\n\n// const MapComponent = ({ startLocation, pickupLocation, dropoffLocation }) => {\n//   // console.log(startLocation, pickupLocation, dropoffLocation);\n\n//   const mapRef = useRef(null); // Ref to the map container div\n//   const mapInstance = useRef(null); // Ref to store the leaflet map instance\n\n//   useEffect(() => {\n//     const createMap = async () => {\n//       if (mapRef.current) {\n//         // Check if the map container exists AND the map hasn't been initialized yet using L.DomUtil.get\n//         const existingMap = L.DomUtil.get(\"map\"); // Use L.DomUtil.get to check if map already exists\n\n//         if (!existingMap?._leaflet_id) {\n//           // Only initialize if the map hasn't been initialized on this element\n//           const map = L.map(mapRef.current, {\n//             center: [40.7128, -74.006],\n//             zoom: 8,\n//             scrollWheelZoom: false,\n//           });\n\n//           L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//             attribution:\n//               '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//           }).addTo(map);\n\n//           // Geocoding function (replace with a real geocoding service)\n//           const geocode = async (location) => {\n//             console.warn(\n//               \"Geocoding is not fully implemented -- using a dummy lat/lon value\"\n//             );\n//             switch (location) {\n//               case \"Miami, FL\":\n//                 return [25.7617, -80.1918]; // Miami coordinates\n//               case \"Orlando, FL\":\n//                 return [28.5383, -81.3792]; // Orlando coordinates\n//               case \"Jacksonville, FL\":\n//                 return [30.3322, -81.6557]; // Jacksonville coordinates\n//               default:\n//                 return null;\n//             }\n//           };\n\n//           const createRoutingControl = async () => {\n//             const startCoords = await geocode(startLocation);\n//             const pickupCoords = await geocode(pickupLocation);\n//             const dropoffCoords = await geocode(dropoffLocation);\n\n//             if (!startCoords || !pickupCoords || !dropoffCoords) {\n//               console.error(\"Could not geocode all locations\");\n//               return;\n//             }\n\n//             L.Routing.control({\n//               waypoints: [\n//                 L.latLng(startCoords),\n//                 L.latLng(pickupCoords),\n//                 L.latLng(dropoffCoords),\n//               ],\n//               routeWhileDragging: false,\n//               showAlternatives: false,\n//               serviceUrl: \"http://router.project-osrm.org/route/v1\",\n//             }).addTo(map);\n//           };\n\n//           await createRoutingControl(); // Make sure the routing is added after geocoding\n\n//           mapInstance.current = map; // Store the map instance in the ref\n//         } else {\n//           console.log(\"Map already initialized, skipping initialization.\");\n//         }\n//       }\n//     };\n\n//     createMap();\n\n//     return () => {\n//       if (mapInstance.current) {\n//         mapInstance.current.remove(); // Clean up the map on unmount\n//       }\n//     };\n//   }, [startLocation, pickupLocation, dropoffLocation]); // Dependencies for the useEffect\n\n//   return <div id=\"map\" ref={mapRef} style={{ height: \"500px\" }}></div>;\n// };\n\n// export default MapComponent;\n\n// import React, { useEffect, useRef } from \"react\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\n// import \"leaflet-routing-machine\";\n// import \"./MapComponent.css\";\n\n// // Fix for Leaflet icon path (Method 1)\n// delete L.Icon.Default.prototype._getIconUrl;\n\n// L.Icon.Default.mergeOptions({\n//   iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n//   iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n//   shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n// });\n\n// const MapComponent = ({ logsData, tripId }) => {\n//   const mapRef = useRef(null);\n//   const mapInstance = useRef(null);\n\n//   useEffect(() => {\n//     const createMap = async () => {\n//       if (!mapRef.current) return; // Handle null mapRef.current and only continue if present\n\n//       const existingMap = L.DomUtil.get(\"map\");\n//       if (!existingMap?._leaflet_id) {\n//         const map = L.map(mapRef.current, {\n//           center: [40.7128, -74.006],\n//           zoom: 8,\n//           scrollWheelZoom: false,\n//         });\n\n//         L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//           attribution:\n//             '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//         }).addTo(map);\n\n//         if (logsData != null && logsData.length > 0) {\n//           const startLog = logsData?.[0];\n//           const pickupLog = logsData?.[8];\n//           const dropoffLog = logsData?.[10];\n\n//           if (!startLog || !pickupLog || !dropoffLog) {\n//             console.error(\n//               \"Missing log entries for start, pickup, or dropoff location.  Length of the logs is:\",\n//               logsData.length\n//             );\n//             return;\n//           }\n\n//           const startCoords = [startLog.latitude, startLog.longitude];\n//           const pickupCoords = [pickupLog.latitude, pickupLog.longitude];\n//           const dropoffCoords = [dropoffLog.latitude, dropoffLog.longitude];\n\n//           // Create Routing Control\n//           L.Routing.control({\n//             waypoints: [\n//               L.latLng(startCoords),\n//               L.latLng(pickupCoords),\n//               L.latLng(dropoffCoords),\n//             ],\n//             routeWhileDragging: false,\n//             showAlternatives: false,\n//             serviceUrl: \"http://router.project-osrm.org/route/v1\",\n//           }).addTo(map);\n//         }\n\n//         mapInstance.current = map;\n//       } else {\n//         console.log(\"Map already initialized, skipping initialization.\");\n//       }\n//     };\n\n//     createMap();\n\n//     return () => {\n//       if (mapInstance.current) {\n//         mapInstance.current.remove();\n//         mapInstance.current = null;\n//       }\n//     };\n//   }, [logsData]);\n\n//   return <div id=\"map\" ref={mapRef} style={{ height: \"500px\" }}></div>;\n// };\n\n// export default MapComponent;\n\n// import React, { useEffect, useRef } from \"react\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\n// import \"leaflet-routing-machine\";\n// import \"./MapComponent.css\";\n\n// // Fix for Leaflet icon path (Method 1)\n// delete L.Icon.Default.prototype._getIconUrl;\n\n// L.Icon.Default.mergeOptions({\n//   iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n//   iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n//   shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n// });\n\n// const MapComponent = ({ logsData, tripId }) => {\n//   const mapRef = useRef(null);\n//   const mapInstance = useRef(null);\n\n//   useEffect(() => {\n//     const createMap = async () => {\n//       if (!mapRef.current) return; // Handle null mapRef.current and only continue if present\n\n//       const existingMap = L.DomUtil.get(\"map\");\n//       if (!existingMap?._leaflet_id) {\n//         const map = L.map(mapRef.current, {\n//           center: [40.7128, -74.006],\n//           zoom: 6, // Increased zoom out for better visibility of longer routes\n//           scrollWheelZoom: false,\n//         });\n\n//         L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//           attribution:\n//             '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//         }).addTo(map);\n\n//         if (logsData != null && logsData.length > 0) {\n//           const startLog = logsData?.[0];\n//           const pickupLog = logsData?.[9];\n//           const dropoffLog = logsData?.[10];\n\n//           if (!startLog || !pickupLog || !dropoffLog) {\n//             console.error(\n//               \"Missing log entries for start, pickup, or dropoff location.  Length of the logs is:\",\n//               logsData.length\n//             );\n//             return;\n//           }\n\n//           const startCoords = [startLog.latitude, startLog.longitude];\n//           const pickupCoords = [pickupLog.latitude, pickupLog.longitude];\n//           const dropoffCoords = [dropoffLog.latitude, dropoffLog.longitude];\n\n//           // Add intermediate location markers\n//           logsData\n//             .map((log, index) => {\n//               if (index !== 0 && index !== 9 && index !== 10) {\n//                 // Exclude start, pickup, and dropoff locations\n//                 return L.marker([log.latitude, log.longitude])\n//                   .addTo(map)\n//                   .bindPopup(\n//                     `${log.location}<br>Duty Status: ${log.duty_status}<br>Remarks: ${log.remarks}`\n//                   );\n//               }\n//               return null;\n//             })\n//             .filter((waypoint) => waypoint !== null);\n\n//           // Create Routing Control (with intermediate waypoints)\n//           L.Routing.control({\n//             waypoints: [\n//               L.latLng(startCoords),\n//               L.latLng(pickupCoords),\n//               L.latLng(dropoffCoords),\n//             ],\n//             routeWhileDragging: false,\n//             showAlternatives: false,\n//             serviceUrl: \"http://router.project-osrm.org/route/v1\",\n//           }).addTo(map);\n//         }\n\n//         mapInstance.current = map;\n//       } else {\n//         console.log(\"Map already initialized, skipping initialization.\");\n//       }\n//     };\n\n//     createMap();\n\n//     return () => {\n//       if (mapInstance.current) {\n//         mapInstance.current.remove();\n//         mapInstance.current = null;\n//       }\n//     };\n//   }, [logsData]);\n\n//   return <div id=\"map\" ref={mapRef} style={{ height: \"500px\" }}></div>;\n// };\n\n// export default MapComponent;\n\n// ----------------- Routing for only the start, pickup and dropoff locations -----------------\n// import React, { useEffect, useRef } from \"react\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\n// import \"leaflet-routing-machine\";\n// import \"./MapComponent.css\";\n\n// // Fix for Leaflet icon path (Method 1)\n// delete L.Icon.Default.prototype._getIconUrl;\n\n// L.Icon.Default.mergeOptions({\n//   iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n//   iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n//   shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n// });\n\n// const MapComponent = ({ logsData, tripId }) => {\n//   const mapRef = useRef(null);\n//   const mapInstance = useRef(null);\n\n//   useEffect(() => {\n//     const createMap = async () => {\n//       if (!mapRef.current) return;\n\n//       const existingMap = L.DomUtil.get(\"map\");\n//       if (!existingMap?._leaflet_id) {\n//         const map = L.map(mapRef.current, {\n//           center: [40.7128, -74.006],\n//           zoom: 6,\n//           scrollWheelZoom: false,\n//         });\n\n//         L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//           attribution:\n//             '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//         }).addTo(map);\n\n//         if (logsData != null && logsData.length > 0) {\n//           const startLog = logsData[0];\n//           const pickupLog = logsData[9];\n//           const dropoffLog = logsData[10];\n\n//           if (!startLog || !pickupLog || !dropoffLog) {\n//             console.error(\n//               \"Missing log entries for start, pickup, or dropoff location. Length of the logs is:\",\n//               logsData.length\n//             );\n//             return;\n//           }\n\n//           const startCoords = [startLog.latitude, startLog.longitude];\n//           const pickupCoords = [pickupLog.latitude, pickupLog.longitude];\n//           const dropoffCoords = [dropoffLog.latitude, dropoffLog.longitude];\n\n//           // Create custom icons\n//           const startIcon = L.icon({\n//             iconUrl:\n//               \"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png\", // green\n//             shadowUrl:\n//               \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n//             iconSize: [25, 41],\n//             iconAnchor: [12, 41],\n//             popupAnchor: [1, -34],\n//             shadowSize: [41, 41],\n//           });\n\n//           const pickupIcon = L.icon({\n//             iconUrl:\n//               \"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png\", // blue\n//             shadowUrl:\n//               \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n//             iconSize: [25, 41],\n//             iconAnchor: [12, 41],\n//             popupAnchor: [1, -34],\n//             shadowSize: [41, 41],\n//           });\n\n//           const dropoffIcon = L.icon({\n//             iconUrl:\n//               \"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png\", // red\n//             shadowUrl:\n//               \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n//             iconSize: [25, 41],\n//             iconAnchor: [12, 41],\n//             popupAnchor: [1, -34],\n//             shadowSize: [41, 41],\n//           });\n\n//           // Add start, pickup, and dropoff markers\n//           L.marker(startCoords, { icon: startIcon })\n//             .addTo(map)\n//             .bindPopup(\n//               `${startLog.location}<br>Duty Status: ${startLog.duty_status}<br>Remarks: ${startLog.remarks}`\n//             );\n\n//           L.marker(pickupCoords, { icon: pickupIcon })\n//             .addTo(map)\n//             .bindPopup(\n//               `${pickupLog.location}<br>Duty Status: ${pickupLog.duty_status}<br>Remarks: ${pickupLog.remarks}`\n//             );\n\n//           L.marker(dropoffCoords, { icon: dropoffIcon })\n//             .addTo(map)\n//             .bindPopup(\n//               `${dropoffLog.location}<br>Duty Status: ${dropoffLog.duty_status}<br>Remarks: ${dropoffLog.remarks}`\n//             );\n\n//           // Add intermediate location markers\n//           logsData.forEach((log, index) => {\n//             if (index !== 0 && index !== 9 && index !== 10) {\n//               // Exclude start, pickup, and dropoff locations\n//               L.marker([log.latitude, log.longitude])\n//                 .addTo(map)\n//                 .bindPopup(\n//                   `${log.location}<br>Duty Status: ${log.duty_status}<br>Remarks: ${log.remarks}`\n//                 );\n//             }\n//           });\n\n//           // Create Routing Control (with intermediate waypoints)\n//           L.Routing.control({\n//             waypoints: [\n//               L.latLng(startCoords),\n//               L.latLng(pickupCoords),\n//               L.latLng(dropoffCoords),\n//             ],\n//             routeWhileDragging: false,\n//             showAlternatives: false,\n//             serviceUrl: \"http://router.project-osrm.org/route/v1\",\n//           }).addTo(map);\n//         }\n\n//         mapInstance.current = map;\n//       } else {\n//         console.log(\"Map already initialized, skipping initialization.\");\n//       }\n//     };\n\n//     createMap();\n\n//     return () => {\n//       if (mapInstance.current) {\n//         mapInstance.current.remove();\n//         mapInstance.current = null;\n//       }\n//     };\n//   }, [logsData]);\n\n//   return <div id=\"map\" ref={mapRef} style={{ height: \"500px\" }}></div>;\n// };\n\n// export default MapComponent;\n\n// ----------------- Routing for the start, pickup and dropoff locations + all other stops -----------------\n// import React, { useEffect, useRef } from \"react\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\n// import \"leaflet-routing-machine\";\n// import \"./MapComponent.css\";\n\n// // Fix for Leaflet icon path (Method 1)\n// delete L.Icon.Default.prototype._getIconUrl;\n\n// L.Icon.Default.mergeOptions({\n//   iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n//   iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n//   shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n// });\n\n// const MapComponent = ({ logsData, tripId }) => {\n//   const mapRef = useRef(null);\n//   const mapInstance = useRef(null);\n\n//   useEffect(() => {\n//     const createMap = async () => {\n//       if (!mapRef.current) return;\n\n//       const existingMap = L.DomUtil.get(\"map\");\n//       if (!existingMap?._leaflet_id) {\n//         const map = L.map(mapRef.current, {\n//           center: [40.7128, -74.006],\n//           zoom: 6,\n//           scrollWheelZoom: false,\n//         });\n\n//         L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//           attribution:\n//             '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//         }).addTo(map);\n\n//         if (logsData != null && logsData.length > 0) {\n//           const startLog = logsData[0];\n//           const pickupLog = logsData[9];\n//           const dropoffLog = logsData[10];\n\n//           if (!startLog || !pickupLog || !dropoffLog) {\n//             console.error(\n//               \"Missing log entries for start, pickup, or dropoff location. Length of the logs is:\",\n//               logsData.length\n//             );\n//             return;\n//           }\n\n//           const startCoords = [startLog.latitude, startLog.longitude];\n//           const pickupCoords = [pickupLog.latitude, pickupLog.longitude];\n//           const dropoffCoords = [dropoffLog.latitude, dropoffLog.longitude];\n\n//           // Create custom icons\n//           const startIcon = L.icon({\n//             iconUrl:\n//               \"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png\", // green\n//             shadowUrl:\n//               \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n//             iconSize: [25, 41],\n//             iconAnchor: [12, 41],\n//             popupAnchor: [1, -34],\n//             shadowSize: [41, 41],\n//           });\n\n//           const pickupIcon = L.icon({\n//             iconUrl:\n//               \"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png\", // blue\n//             shadowUrl:\n//               \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n//             iconSize: [25, 41],\n//             iconAnchor: [12, 41],\n//             popupAnchor: [1, -34],\n//             shadowSize: [41, 41],\n//           });\n\n//           const dropoffIcon = L.icon({\n//             iconUrl:\n//               \"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png\", // red\n//             shadowUrl:\n//               \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n//             iconSize: [25, 41],\n//             iconAnchor: [12, 41],\n//             popupAnchor: [1, -34],\n//             shadowSize: [41, 41],\n//           });\n\n//           // Add start, pickup, and dropoff markers\n//           const startMarker = L.marker(startCoords, { icon: startIcon })\n//             .addTo(map)\n//             .bindPopup(\n//               `${startLog.location}<br>Duty Status: ${startLog.duty_status}<br>Remarks: ${startLog.remarks}`\n//             );\n\n//           const pickupMarker = L.marker(pickupCoords, { icon: pickupIcon })\n//             .addTo(map)\n//             .bindPopup(\n//               `${pickupLog.location}<br>Duty Status: ${pickupLog.duty_status}<br>Remarks: ${pickupLog.remarks}`\n//             );\n\n//           const dropoffMarker = L.marker(dropoffCoords, { icon: dropoffIcon })\n//             .addTo(map)\n//             .bindPopup(\n//               `${dropoffLog.location}<br>Duty Status: ${dropoffLog.duty_status}<br>Remarks: ${dropoffLog.remarks}`\n//             );\n\n//           // Open popup on mouseover, close on mouseout\n//           startMarker.on(\"mouseover\", function () {\n//             this.openPopup();\n//           });\n//           startMarker.on(\"mouseout\", function () {\n//             this.closePopup();\n//           });\n\n//           pickupMarker.on(\"mouseover\", function () {\n//             this.openPopup();\n//           });\n//           pickupMarker.on(\"mouseout\", function () {\n//             this.closePopup();\n//           });\n\n//           dropoffMarker.on(\"mouseover\", function () {\n//             this.openPopup();\n//           });\n//           dropoffMarker.on(\"mouseout\", function () {\n//             this.closePopup();\n//           });\n\n//           // Add intermediate location markers\n//           logsData.forEach((log, index) => {\n//             if (index !== 0 && index !== 9 && index !== 10) {\n//               // Exclude start, pickup, and dropoff locations\n//               const intermediateMarker = L.marker([log.latitude, log.longitude])\n//                 .addTo(map)\n//                 .bindPopup(\n//                   `${log.location}<br>Duty Status: ${log.duty_status}<br>Remarks: ${log.remarks}`\n//                 );\n\n//               intermediateMarker.on(\"mouseover\", function () {\n//                 this.openPopup();\n//               });\n//               intermediateMarker.on(\"mouseout\", function () {\n//                 this.closePopup();\n//               });\n//             }\n//           });\n\n//           // Create Waypoints including all Stops\n//           const waypoints = logsData.map((log) =>\n//             L.latLng(log.latitude, log.longitude)\n//           );\n\n//           // Create Routing Control (with intermediate waypoints)\n//           L.Routing.control({\n//             waypoints: waypoints,\n//             routeWhileDragging: false,\n//             showAlternatives: false,\n//             serviceUrl: \"http://router.project-osrm.org/route/v1\",\n//           }).addTo(map);\n//         }\n\n//         mapInstance.current = map;\n//       } else {\n//         console.log(\"Map already initialized, skipping initialization.\");\n//       }\n//     };\n\n//     createMap();\n\n//     return () => {\n//       if (mapInstance.current) {\n//         mapInstance.current.remove();\n//         mapInstance.current = null;\n//       }\n//     };\n//   }, [logsData]);\n\n//   return <div id=\"map\" ref={mapRef} style={{ height: \"500px\" }}></div>;\n// };\n\n// export default MapComponent;\n\nimport React, { useEffect, useRef } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\nimport \"leaflet-routing-machine\";\nimport \"./MapComponent.css\";\n\n// Fix Leaflet icon path\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n});\n\nconst MapComponent = ({ logsData }) => {\n  const mapRef = useRef(null);\n  const mapInstance = useRef(null);\n  const markersRef = useRef([]);\n\n  useEffect(() => {\n    if (!mapRef.current) return;\n\n    if (!mapInstance.current) {\n      mapInstance.current = L.map(mapRef.current, {\n        center: [40.7128, -74.006],\n        zoom: 6,\n        scrollWheelZoom: false,\n      });\n\n      L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n        attribution:\n          '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n      }).addTo(mapInstance.current);\n    }\n\n    const map = mapInstance.current;\n\n    // Remove previous markers\n    markersRef.current.forEach((marker) => marker.remove());\n    markersRef.current = [];\n\n    if (logsData && logsData.length > 0) {\n      const startLog = logsData[0];\n      const pickupLog = logsData[9];\n      const dropoffLog = logsData[10];\n\n      if (!startLog || !pickupLog || !dropoffLog) {\n        console.error(\"Missing log entries for start, pickup, or dropoff location.\");\n        return;\n      }\n\n      const startCoords = [startLog.latitude, startLog.longitude];\n      const pickupCoords = [pickupLog.latitude, pickupLog.longitude];\n      const dropoffCoords = [dropoffLog.latitude, dropoffLog.longitude];\n\n      // Custom icons\n      const createIcon = (color) =>\n        L.icon({\n          iconUrl: `https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-${color}.png`,\n          shadowUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n          iconSize: [25, 41],\n          iconAnchor: [12, 41],\n          popupAnchor: [1, -34],\n          shadowSize: [41, 41],\n        });\n\n      const startIcon = createIcon(\"green\");\n      const pickupIcon = createIcon(\"blue\");\n      const dropoffIcon = createIcon(\"red\");\n\n      // Add markers with hover effect\n      const createMarker = (coords, icon, log) => {\n        const marker = L.marker(coords, { icon }).addTo(map);\n        const popupContent = `${log.location}<br>Duty Status: ${log.duty_status}<br>Remarks: ${log.remarks}`;\n        \n        marker.bindPopup(popupContent, { closeButton: false });\n\n        marker.on(\"mouseover\", function () {\n          this.openPopup();\n        });\n        marker.on(\"mouseout\", function () {\n          this.closePopup();\n        });\n\n        markersRef.current.push(marker);\n        return marker;\n      };\n\n      createMarker(startCoords, startIcon, startLog);\n      createMarker(pickupCoords, pickupIcon, pickupLog);\n      createMarker(dropoffCoords, dropoffIcon, dropoffLog);\n\n      // Add intermediate markers\n      logsData.forEach((log, index) => {\n        if (index !== 0 && index !== 9 && index !== 10) {\n          createMarker([log.latitude, log.longitude], L.icon(), log);\n        }\n      });\n\n      // Routing control\n      L.Routing.control({\n        waypoints: [L.latLng(startCoords), L.latLng(pickupCoords), L.latLng(dropoffCoords)],\n        routeWhileDragging: false,\n        showAlternatives: false,\n        serviceUrl: \"http://router.project-osrm.org/route/v1\",\n      }).addTo(map);\n    }\n\n    return () => {\n      markersRef.current.forEach((marker) => marker.remove());\n      markersRef.current = [];\n    };\n  }, [logsData]);\n\n  return <div id=\"map\" ref={mapRef} style={{ height: \"500px\" }}></div>;\n};\n\nexport default MapComponent;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,0BAA0B;AACjC,OAAO,0DAA0D;AACjE,OAAO,yBAAyB;AAChC,OAAO,oBAAoB;;AAE3B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAOF,CAAC,CAACG,IAAI,CAACC,OAAO,CAACC,SAAS,CAACC,WAAW;AAC3CN,CAAC,CAACG,IAAI,CAACC,OAAO,CAACG,YAAY,CAAC;EAC1BC,aAAa,EAAEC,OAAO,CAAC,wCAAwC,CAAC;EAChEC,OAAO,EAAED,OAAO,CAAC,qCAAqC,CAAC;EACvDE,SAAS,EAAEF,OAAO,CAAC,uCAAuC;AAC5D,CAAC,CAAC;AAEF,MAAMG,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAMC,MAAM,GAAGhB,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAMiB,WAAW,GAAGjB,MAAM,CAAC,IAAI,CAAC;EAChC,MAAMkB,UAAU,GAAGlB,MAAM,CAAC,EAAE,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd,IAAI,CAACiB,MAAM,CAACG,OAAO,EAAE;IAErB,IAAI,CAACF,WAAW,CAACE,OAAO,EAAE;MACxBF,WAAW,CAACE,OAAO,GAAGlB,CAAC,CAACmB,GAAG,CAACJ,MAAM,CAACG,OAAO,EAAE;QAC1CE,MAAM,EAAE,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC;QAC1BC,IAAI,EAAE,CAAC;QACPC,eAAe,EAAE;MACnB,CAAC,CAAC;MAEFtB,CAAC,CAACuB,SAAS,CAAC,oDAAoD,EAAE;QAChEC,WAAW,EACT;MACJ,CAAC,CAAC,CAACC,KAAK,CAACT,WAAW,CAACE,OAAO,CAAC;IAC/B;IAEA,MAAMC,GAAG,GAAGH,WAAW,CAACE,OAAO;;IAE/B;IACAD,UAAU,CAACC,OAAO,CAACQ,OAAO,CAAEC,MAAM,IAAKA,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC;IACvDX,UAAU,CAACC,OAAO,GAAG,EAAE;IAEvB,IAAIL,QAAQ,IAAIA,QAAQ,CAACgB,MAAM,GAAG,CAAC,EAAE;MACnC,MAAMC,QAAQ,GAAGjB,QAAQ,CAAC,CAAC,CAAC;MAC5B,MAAMkB,SAAS,GAAGlB,QAAQ,CAAC,CAAC,CAAC;MAC7B,MAAMmB,UAAU,GAAGnB,QAAQ,CAAC,EAAE,CAAC;MAE/B,IAAI,CAACiB,QAAQ,IAAI,CAACC,SAAS,IAAI,CAACC,UAAU,EAAE;QAC1CC,OAAO,CAACC,KAAK,CAAC,6DAA6D,CAAC;QAC5E;MACF;MAEA,MAAMC,WAAW,GAAG,CAACL,QAAQ,CAACM,QAAQ,EAAEN,QAAQ,CAACO,SAAS,CAAC;MAC3D,MAAMC,YAAY,GAAG,CAACP,SAAS,CAACK,QAAQ,EAAEL,SAAS,CAACM,SAAS,CAAC;MAC9D,MAAME,aAAa,GAAG,CAACP,UAAU,CAACI,QAAQ,EAAEJ,UAAU,CAACK,SAAS,CAAC;;MAEjE;MACA,MAAMG,UAAU,GAAIC,KAAK,IACvBzC,CAAC,CAAC0C,IAAI,CAAC;QACLhC,OAAO,EAAE,6FAA6F+B,KAAK,MAAM;QACjH9B,SAAS,EAAE,+EAA+E;QAC1FgC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QACpBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;QACrBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE;MACrB,CAAC,CAAC;MAEJ,MAAMC,SAAS,GAAGP,UAAU,CAAC,OAAO,CAAC;MACrC,MAAMQ,UAAU,GAAGR,UAAU,CAAC,MAAM,CAAC;MACrC,MAAMS,WAAW,GAAGT,UAAU,CAAC,KAAK,CAAC;;MAErC;MACA,MAAMU,YAAY,GAAGA,CAACC,MAAM,EAAET,IAAI,EAAEU,GAAG,KAAK;QAC1C,MAAMzB,MAAM,GAAG3B,CAAC,CAAC2B,MAAM,CAACwB,MAAM,EAAE;UAAET;QAAK,CAAC,CAAC,CAACjB,KAAK,CAACN,GAAG,CAAC;QACpD,MAAMkC,YAAY,GAAG,GAAGD,GAAG,CAACE,QAAQ,oBAAoBF,GAAG,CAACG,WAAW,gBAAgBH,GAAG,CAACI,OAAO,EAAE;QAEpG7B,MAAM,CAAC8B,SAAS,CAACJ,YAAY,EAAE;UAAEK,WAAW,EAAE;QAAM,CAAC,CAAC;QAEtD/B,MAAM,CAACgC,EAAE,CAAC,WAAW,EAAE,YAAY;UACjC,IAAI,CAACC,SAAS,CAAC,CAAC;QAClB,CAAC,CAAC;QACFjC,MAAM,CAACgC,EAAE,CAAC,UAAU,EAAE,YAAY;UAChC,IAAI,CAACE,UAAU,CAAC,CAAC;QACnB,CAAC,CAAC;QAEF5C,UAAU,CAACC,OAAO,CAAC4C,IAAI,CAACnC,MAAM,CAAC;QAC/B,OAAOA,MAAM;MACf,CAAC;MAEDuB,YAAY,CAACf,WAAW,EAAEY,SAAS,EAAEjB,QAAQ,CAAC;MAC9CoB,YAAY,CAACZ,YAAY,EAAEU,UAAU,EAAEjB,SAAS,CAAC;MACjDmB,YAAY,CAACX,aAAa,EAAEU,WAAW,EAAEjB,UAAU,CAAC;;MAEpD;MACAnB,QAAQ,CAACa,OAAO,CAAC,CAAC0B,GAAG,EAAEW,KAAK,KAAK;QAC/B,IAAIA,KAAK,KAAK,CAAC,IAAIA,KAAK,KAAK,CAAC,IAAIA,KAAK,KAAK,EAAE,EAAE;UAC9Cb,YAAY,CAAC,CAACE,GAAG,CAAChB,QAAQ,EAAEgB,GAAG,CAACf,SAAS,CAAC,EAAErC,CAAC,CAAC0C,IAAI,CAAC,CAAC,EAAEU,GAAG,CAAC;QAC5D;MACF,CAAC,CAAC;;MAEF;MACApD,CAAC,CAACgE,OAAO,CAACC,OAAO,CAAC;QAChBC,SAAS,EAAE,CAAClE,CAAC,CAACmE,MAAM,CAAChC,WAAW,CAAC,EAAEnC,CAAC,CAACmE,MAAM,CAAC7B,YAAY,CAAC,EAAEtC,CAAC,CAACmE,MAAM,CAAC5B,aAAa,CAAC,CAAC;QACnF6B,kBAAkB,EAAE,KAAK;QACzBC,gBAAgB,EAAE,KAAK;QACvBC,UAAU,EAAE;MACd,CAAC,CAAC,CAAC7C,KAAK,CAACN,GAAG,CAAC;IACf;IAEA,OAAO,MAAM;MACXF,UAAU,CAACC,OAAO,CAACQ,OAAO,CAAEC,MAAM,IAAKA,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC;MACvDX,UAAU,CAACC,OAAO,GAAG,EAAE;IACzB,CAAC;EACH,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAEd,oBAAOX,OAAA;IAAKqE,EAAE,EAAC,KAAK;IAACC,GAAG,EAAEzD,MAAO;IAAC0D,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAQ;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACtE,CAAC;AAAChE,EAAA,CArGIF,YAAY;AAAAmE,EAAA,GAAZnE,YAAY;AAuGlB,eAAeA,YAAY;AAAC,IAAAmE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}