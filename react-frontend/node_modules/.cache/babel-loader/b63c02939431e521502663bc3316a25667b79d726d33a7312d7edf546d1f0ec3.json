{"ast":null,"code":"var _jsxFileName = \"/Users/imaadfakier/Desktop/incomes/primary/corporate/hiring_process_tracker/spotter_ai/spotter_ai_logbook/react-frontend/src/MapComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\nimport \"leaflet-routing-machine\";\n\n// Fix for Leaflet icon path (Method 1)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: \"./leaflet/images/marker-icon-2x.png\",\n  iconUrl: \"./leaflet/images/marker-icon.png\",\n  shadowUrl: \"./leaflet/images/marker-shadow.png\"\n});\nconst MapComponent = ({\n  startLocation,\n  pickupLocation,\n  dropoffLocation\n}) => {\n  _s();\n  useEffect(() => {\n    const map = L.map(\"map\", {\n      center: [40.7128, -74.006],\n      zoom: 8,\n      scrollWheelZoom: false\n    });\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      attribution: '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    }).addTo(map);\n\n    // Geocoding function (replace with a real geocoding service)\n    const geocode = async location => {\n      // Replace this with a call to a real geocoding service like Nominatim\n      // For example:\n      // const response = await fetch(`https://nominatim.openstreetmap.org/search?q=${location}&format=json`);\n      // const data = await response.json();\n      // if (data.length > 0) {\n      //   return [data[0].lat, data[0].lon];\n      // }\n      console.warn(\"Geocoding is not fully implemented -- using a dummy lat/lon value\");\n      switch (location) {\n        case \"New York, NY\":\n          return [40.7128, -74.006];\n        case \"Chicago, IL\":\n          return [41.8781, -87.6298];\n        case \"Los Angeles, CA\":\n          return [34.0522, -118.2437];\n        default:\n          return null;\n      }\n    };\n    const createRoutingControl = async () => {\n      const startCoords = await geocode(startLocation);\n      const pickupCoords = await geocode(pickupLocation);\n      const dropoffCoords = await geocode(dropoffLocation);\n      if (!startCoords || !pickupCoords || !dropoffCoords) {\n        console.error(\"Could not geocode all locations\");\n        return;\n      }\n      L.Routing.control({\n        waypoints: [L.latLng(startCoords), L.latLng(pickupCoords), L.latLng(dropoffCoords)],\n        routeWhileDragging: false,\n        showAlternatives: false,\n        //If you want to use OSRM, uncomment this line and comment out the mapbox API call\n        serviceUrl: \"http://router.project-osrm.org/route/v1\"\n      }).addTo(map);\n    };\n    createRoutingControl();\n    return () => {\n      map.remove();\n    };\n  }, [startLocation, pickupLocation, dropoffLocation]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      height: \"500px\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 10\n  }, this);\n};\n_s(MapComponent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","L","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","MapComponent","startLocation","pickupLocation","dropoffLocation","_s","map","center","zoom","scrollWheelZoom","tileLayer","attribution","addTo","geocode","location","console","warn","createRoutingControl","startCoords","pickupCoords","dropoffCoords","error","Routing","control","waypoints","latLng","routeWhileDragging","showAlternatives","serviceUrl","remove","id","style","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/imaadfakier/Desktop/incomes/primary/corporate/hiring_process_tracker/spotter_ai/spotter_ai_logbook/react-frontend/src/MapComponent.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\nimport \"leaflet-routing-machine\";\n\n// Fix for Leaflet icon path (Method 1)\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: \"./leaflet/images/marker-icon-2x.png\",\n  iconUrl: \"./leaflet/images/marker-icon.png\",\n  shadowUrl: \"./leaflet/images/marker-shadow.png\",\n});\n\nconst MapComponent = ({ startLocation, pickupLocation, dropoffLocation }) => {\n  useEffect(() => {\n    const map = L.map(\"map\", {\n      center: [40.7128, -74.006],\n      zoom: 8,\n      scrollWheelZoom: false,\n    });\n\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      attribution:\n        '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    }).addTo(map);\n\n    // Geocoding function (replace with a real geocoding service)\n    const geocode = async (location) => {\n      // Replace this with a call to a real geocoding service like Nominatim\n      // For example:\n      // const response = await fetch(`https://nominatim.openstreetmap.org/search?q=${location}&format=json`);\n      // const data = await response.json();\n      // if (data.length > 0) {\n      //   return [data[0].lat, data[0].lon];\n      // }\n      console.warn(\n        \"Geocoding is not fully implemented -- using a dummy lat/lon value\"\n      );\n      switch (location) {\n        case \"New York, NY\":\n          return [40.7128, -74.006];\n        case \"Chicago, IL\":\n          return [41.8781, -87.6298];\n        case \"Los Angeles, CA\":\n          return [34.0522, -118.2437];\n        default:\n          return null;\n      }\n    };\n\n    const createRoutingControl = async () => {\n      const startCoords = await geocode(startLocation);\n      const pickupCoords = await geocode(pickupLocation);\n      const dropoffCoords = await geocode(dropoffLocation);\n\n      if (!startCoords || !pickupCoords || !dropoffCoords) {\n        console.error(\"Could not geocode all locations\");\n        return;\n      }\n\n      L.Routing.control({\n        waypoints: [\n          L.latLng(startCoords),\n          L.latLng(pickupCoords),\n          L.latLng(dropoffCoords),\n        ],\n        routeWhileDragging: false,\n        showAlternatives: false,\n        //If you want to use OSRM, uncomment this line and comment out the mapbox API call\n        serviceUrl: \"http://router.project-osrm.org/route/v1\",\n      }).addTo(map);\n    };\n\n    createRoutingControl();\n\n    return () => {\n      map.remove();\n    };\n  }, [startLocation, pickupLocation, dropoffLocation]);\n\n  return <div id=\"map\" style={{ height: \"500px\" }}></div>;\n};\n\nexport default MapComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,0BAA0B;AACjC,OAAO,0DAA0D;AACjE,OAAO,yBAAyB;;AAEhC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAOF,CAAC,CAACG,IAAI,CAACC,OAAO,CAACC,SAAS,CAACC,WAAW;AAE3CN,CAAC,CAACG,IAAI,CAACC,OAAO,CAACG,YAAY,CAAC;EAC1BC,aAAa,EAAE,qCAAqC;EACpDC,OAAO,EAAE,kCAAkC;EAC3CC,SAAS,EAAE;AACb,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAGA,CAAC;EAAEC,aAAa;EAAEC,cAAc;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAC3EhB,SAAS,CAAC,MAAM;IACd,MAAMiB,GAAG,GAAGhB,CAAC,CAACgB,GAAG,CAAC,KAAK,EAAE;MACvBC,MAAM,EAAE,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC;MAC1BC,IAAI,EAAE,CAAC;MACPC,eAAe,EAAE;IACnB,CAAC,CAAC;IAEFnB,CAAC,CAACoB,SAAS,CAAC,oDAAoD,EAAE;MAChEC,WAAW,EACT;IACJ,CAAC,CAAC,CAACC,KAAK,CAACN,GAAG,CAAC;;IAEb;IACA,MAAMO,OAAO,GAAG,MAAOC,QAAQ,IAAK;MAClC;MACA;MACA;MACA;MACA;MACA;MACA;MACAC,OAAO,CAACC,IAAI,CACV,mEACF,CAAC;MACD,QAAQF,QAAQ;QACd,KAAK,cAAc;UACjB,OAAO,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC;QAC3B,KAAK,aAAa;UAChB,OAAO,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC;QAC5B,KAAK,iBAAiB;UACpB,OAAO,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;QAC7B;UACE,OAAO,IAAI;MACf;IACF,CAAC;IAED,MAAMG,oBAAoB,GAAG,MAAAA,CAAA,KAAY;MACvC,MAAMC,WAAW,GAAG,MAAML,OAAO,CAACX,aAAa,CAAC;MAChD,MAAMiB,YAAY,GAAG,MAAMN,OAAO,CAACV,cAAc,CAAC;MAClD,MAAMiB,aAAa,GAAG,MAAMP,OAAO,CAACT,eAAe,CAAC;MAEpD,IAAI,CAACc,WAAW,IAAI,CAACC,YAAY,IAAI,CAACC,aAAa,EAAE;QACnDL,OAAO,CAACM,KAAK,CAAC,iCAAiC,CAAC;QAChD;MACF;MAEA/B,CAAC,CAACgC,OAAO,CAACC,OAAO,CAAC;QAChBC,SAAS,EAAE,CACTlC,CAAC,CAACmC,MAAM,CAACP,WAAW,CAAC,EACrB5B,CAAC,CAACmC,MAAM,CAACN,YAAY,CAAC,EACtB7B,CAAC,CAACmC,MAAM,CAACL,aAAa,CAAC,CACxB;QACDM,kBAAkB,EAAE,KAAK;QACzBC,gBAAgB,EAAE,KAAK;QACvB;QACAC,UAAU,EAAE;MACd,CAAC,CAAC,CAAChB,KAAK,CAACN,GAAG,CAAC;IACf,CAAC;IAEDW,oBAAoB,CAAC,CAAC;IAEtB,OAAO,MAAM;MACXX,GAAG,CAACuB,MAAM,CAAC,CAAC;IACd,CAAC;EACH,CAAC,EAAE,CAAC3B,aAAa,EAAEC,cAAc,EAAEC,eAAe,CAAC,CAAC;EAEpD,oBAAOZ,OAAA;IAAKsC,EAAE,EAAC,KAAK;IAACC,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAQ;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACzD,CAAC;AAAC/B,EAAA,CApEIJ,YAAY;AAAAoC,EAAA,GAAZpC,YAAY;AAsElB,eAAeA,YAAY;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}