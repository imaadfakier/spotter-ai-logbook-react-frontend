{"ast":null,"code":"var _jsxFileName = \"/Users/imaadfakier/Desktop/incomes/primary/corporate/hiring_process_tracker/spotter_ai/spotter_ai_logbook/react-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport MapComponent from \"./MapComponent\";\nimport DailyLogSheet from \"./DailyLogSheet\";\nimport TripForm from \"./TripForm\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [logEntries, setLogEntries] = useState([]);\n  const [tripDetails, setTripDetails] = useState(null);\n  const handleFormSubmit = async tripData => {\n    // First, create the trip in the backend\n    const response = await fetch(\"/api/trips/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(tripData)\n    });\n    const newTrip = await response.json();\n\n    // Then, generate logs for the trip\n    await fetch(`/api/trips/${newTrip.id}/generate_logs/`, {\n      method: \"POST\"\n    });\n\n    // Finally, fetch the generated logs\n    const logsResponse = await fetch(`/api/trips/${newTrip.id}/logs/`);\n    const logsData = await logsResponse.json();\n    setTripDetails(tripData);\n    setLogEntries(logsData);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Trucker Logbook App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(TripForm, {\n          onSubmit: handleFormSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: tripDetails && /*#__PURE__*/_jsxDEV(MapComponent, {\n          startLocation: tripDetails.startLocation,\n          pickupLocation: tripDetails.pickupLocation,\n          dropoffLocation: tripDetails.dropoffLocation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: logEntries.length > 0 && /*#__PURE__*/_jsxDEV(DailyLogSheet, {\n          logEntries: logEntries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"auafVyRLewD+e81qSEY17OGcV9Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MapComponent","DailyLogSheet","TripForm","Container","Row","Col","jsxDEV","_jsxDEV","App","_s","logEntries","setLogEntries","tripDetails","setTripDetails","handleFormSubmit","tripData","response","fetch","method","headers","body","JSON","stringify","newTrip","json","id","logsResponse","logsData","children","fileName","_jsxFileName","lineNumber","columnNumber","md","onSubmit","startLocation","pickupLocation","dropoffLocation","length","_c","$RefreshReg$"],"sources":["/Users/imaadfakier/Desktop/incomes/primary/corporate/hiring_process_tracker/spotter_ai/spotter_ai_logbook/react-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MapComponent from \"./MapComponent\";\nimport DailyLogSheet from \"./DailyLogSheet\";\nimport TripForm from \"./TripForm\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nfunction App() {\n  const [logEntries, setLogEntries] = useState([]);\n  const [tripDetails, setTripDetails] = useState(null);\n\n  const handleFormSubmit = async (tripData) => {\n    // First, create the trip in the backend\n    const response = await fetch(\"/api/trips/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(tripData),\n    });\n\n    const newTrip = await response.json();\n\n    // Then, generate logs for the trip\n    await fetch(`/api/trips/${newTrip.id}/generate_logs/`, {\n      method: \"POST\",\n    });\n\n    // Finally, fetch the generated logs\n    const logsResponse = await fetch(`/api/trips/${newTrip.id}/logs/`);\n    const logsData = await logsResponse.json();\n\n    setTripDetails(tripData);\n    setLogEntries(logsData);\n  };\n\n  return (\n    <Container>\n      <h1>Trucker Logbook App</h1>\n      <Row>\n        <Col md={6}>\n          <TripForm onSubmit={handleFormSubmit} />\n        </Col>\n        <Col md={6}>\n          {tripDetails && (\n            <MapComponent\n              startLocation={tripDetails.startLocation}\n              pickupLocation={tripDetails.pickupLocation}\n              dropoffLocation={tripDetails.dropoffLocation}\n            />\n          )}\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          {logEntries.length > 0 && <DailyLogSheet logEntries={logEntries} />}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}