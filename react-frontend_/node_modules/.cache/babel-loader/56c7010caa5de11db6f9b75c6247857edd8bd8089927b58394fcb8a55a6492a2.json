{"ast":null,"code":"// import React, { useEffect, useRef } from \"react\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\n// import \"leaflet-routing-machine\";\n// import \"./MapComponent.css\";\n\n// // Fix for Leaflet icon path (Method 1)\n// delete L.Icon.Default.prototype._getIconUrl;\n\n// L.Icon.Default.mergeOptions({\n//   iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n//   iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n//   shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n// });\n\n// const MapComponent = ({ startLocation, pickupLocation, dropoffLocation }) => {\n//   // console.log(startLocation, pickupLocation, dropoffLocation);\n\n//   const mapRef = useRef(null); // Ref to the map container div\n//   const mapInstance = useRef(null); // Ref to store the leaflet map instance\n\n//   useEffect(() => {\n//     const createMap = async () => {\n//       if (mapRef.current) {\n//         // Check if the map container exists AND the map hasn't been initialized yet using L.DomUtil.get\n//         const existingMap = L.DomUtil.get(\"map\"); // Use L.DomUtil.get to check if map already exists\n\n//         if (!existingMap?._leaflet_id) {\n//           // Only initialize if the map hasn't been initialized on this element\n//           const map = L.map(mapRef.current, {\n//             center: [40.7128, -74.006],\n//             zoom: 8,\n//             scrollWheelZoom: false,\n//           });\n\n//           L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//             attribution:\n//               '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//           }).addTo(map);\n\n//           // Geocoding function (replace with a real geocoding service)\n//           const geocode = async (location) => {\n//             console.warn(\n//               \"Geocoding is not fully implemented -- using a dummy lat/lon value\"\n//             );\n//             switch (location) {\n//               case \"Miami, FL\":\n//                 return [25.7617, -80.1918]; // Miami coordinates\n//               case \"Orlando, FL\":\n//                 return [28.5383, -81.3792]; // Orlando coordinates\n//               case \"Jacksonville, FL\":\n//                 return [30.3322, -81.6557]; // Jacksonville coordinates\n//               default:\n//                 return null;\n//             }\n//           };\n\n//           const createRoutingControl = async () => {\n//             const startCoords = await geocode(startLocation);\n//             const pickupCoords = await geocode(pickupLocation);\n//             const dropoffCoords = await geocode(dropoffLocation);\n\n//             if (!startCoords || !pickupCoords || !dropoffCoords) {\n//               console.error(\"Could not geocode all locations\");\n//               return;\n//             }\n\n//             L.Routing.control({\n//               waypoints: [\n//                 L.latLng(startCoords),\n//                 L.latLng(pickupCoords),\n//                 L.latLng(dropoffCoords),\n//               ],\n//               routeWhileDragging: false,\n//               showAlternatives: false,\n//               serviceUrl: \"http://router.project-osrm.org/route/v1\",\n//             }).addTo(map);\n//           };\n\n//           await createRoutingControl(); // Make sure the routing is added after geocoding\n\n//           mapInstance.current = map; // Store the map instance in the ref\n//         } else {\n//           console.log(\"Map already initialized, skipping initialization.\");\n//         }\n//       }\n//     };\n\n//     createMap();\n\n//     return () => {\n//       if (mapInstance.current) {\n//         mapInstance.current.remove(); // Clean up the map on unmount\n//       }\n//     };\n//   }, [startLocation, pickupLocation, dropoffLocation]); // Dependencies for the useEffect\n\n//   return <div id=\"map\" ref={mapRef} style={{ height: \"500px\" }}></div>;\n// };\n\n// export default MapComponent;\n\n// import React, { useEffect, useRef } from \"react\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\n// import \"leaflet-routing-machine\";\n// import \"./MapComponent.css\";\n\n// // Fix for Leaflet icon path (Method 1)\n// delete L.Icon.Default.prototype._getIconUrl;\n\n// L.Icon.Default.mergeOptions({\n//   iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n//   iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n//   shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n// });\n\n// const MapComponent = ({ logsData, tripId }) => {\n//   const mapRef = useRef(null);\n//   const mapInstance = useRef(null);\n\n//   useEffect(() => {\n//     const createMap = async () => {\n//       if (!mapRef.current) return; // Handle null mapRef.current and only continue if present\n\n//       const existingMap = L.DomUtil.get(\"map\");\n//       if (!existingMap?._leaflet_id) {\n//         const map = L.map(mapRef.current, {\n//           center: [40.7128, -74.006],\n//           zoom: 8,\n//           scrollWheelZoom: false,\n//         });\n\n//         L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//           attribution:\n//             '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//         }).addTo(map);\n\n//         if (logsData != null && logsData.length > 0) {\n//           const startLog = logsData?.[0];\n//           const pickupLog = logsData?.[8];\n//           const dropoffLog = logsData?.[10];\n\n//           if (!startLog || !pickupLog || !dropoffLog) {\n//             console.error(\n//               \"Missing log entries for start, pickup, or dropoff location.  Length of the logs is:\",\n//               logsData.length\n//             );\n//             return;\n//           }\n\n//           const startCoords = [startLog.latitude, startLog.longitude];\n//           const pickupCoords = [pickupLog.latitude, pickupLog.longitude];\n//           const dropoffCoords = [dropoffLog.latitude, dropoffLog.longitude];\n\n//           // Create Routing Control\n//           L.Routing.control({\n//             waypoints: [\n//               L.latLng(startCoords),\n//               L.latLng(pickupCoords),\n//               L.latLng(dropoffCoords),\n//             ],\n//             routeWhileDragging: false,\n//             showAlternatives: false,\n//             serviceUrl: \"http://router.project-osrm.org/route/v1\",\n//           }).addTo(map);\n//         }\n\n//         mapInstance.current = map;\n//       } else {\n//         console.log(\"Map already initialized, skipping initialization.\");\n//       }\n//     };\n\n//     createMap();\n\n//     return () => {\n//       if (mapInstance.current) {\n//         mapInstance.current.remove();\n//         mapInstance.current = null;\n//       }\n//     };\n//   }, [logsData]);\n\n//   return <div id=\"map\" ref={mapRef} style={{ height: \"500px\" }}></div>;\n// };\n\n// export default MapComponent;\n\n// import React, { useEffect, useRef } from \"react\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\n// import \"leaflet-routing-machine\";\n// import \"./MapComponent.css\";\n\n// // Fix for Leaflet icon path (Method 1)\n// delete L.Icon.Default.prototype._getIconUrl;\n\n// L.Icon.Default.mergeOptions({\n//   iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n//   iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n//   shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n// });\n\n// const MapComponent = ({ logsData, tripId }) => {\n//   const mapRef = useRef(null);\n//   const mapInstance = useRef(null);\n\n//   useEffect(() => {\n//     const createMap = async () => {\n//       if (!mapRef.current) return; // Handle null mapRef.current and only continue if present\n\n//       const existingMap = L.DomUtil.get(\"map\");\n//       if (!existingMap?._leaflet_id) {\n//         const map = L.map(mapRef.current, {\n//           center: [40.7128, -74.006],\n//           zoom: 6, // Increased zoom out for better visibility of longer routes\n//           scrollWheelZoom: false,\n//         });\n\n//         L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//           attribution:\n//             '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//         }).addTo(map);\n\n//         if (logsData != null && logsData.length > 0) {\n//           const startLog = logsData?.[0];\n//           const pickupLog = logsData?.[9];\n//           const dropoffLog = logsData?.[10];\n\n//           if (!startLog || !pickupLog || !dropoffLog) {\n//             console.error(\n//               \"Missing log entries for start, pickup, or dropoff location.  Length of the logs is:\",\n//               logsData.length\n//             );\n//             return;\n//           }\n\n//           const startCoords = [startLog.latitude, startLog.longitude];\n//           const pickupCoords = [pickupLog.latitude, pickupLog.longitude];\n//           const dropoffCoords = [dropoffLog.latitude, dropoffLog.longitude];\n\n//           // Add intermediate location markers\n//           logsData\n//             .map((log, index) => {\n//               if (index !== 0 && index !== 9 && index !== 10) {\n//                 // Exclude start, pickup, and dropoff locations\n//                 return L.marker([log.latitude, log.longitude])\n//                   .addTo(map)\n//                   .bindPopup(\n//                     `${log.location}<br>Duty Status: ${log.duty_status}<br>Remarks: ${log.remarks}`\n//                   );\n//               }\n//               return null;\n//             })\n//             .filter((waypoint) => waypoint !== null);\n\n//           // Create Routing Control (with intermediate waypoints)\n//           L.Routing.control({\n//             waypoints: [\n//               L.latLng(startCoords),\n//               L.latLng(pickupCoords),\n//               L.latLng(dropoffCoords),\n//             ],\n//             routeWhileDragging: false,\n//             showAlternatives: false,\n//             serviceUrl: \"http://router.project-osrm.org/route/v1\",\n//           }).addTo(map);\n//         }\n\n//         mapInstance.current = map;\n//       } else {\n//         console.log(\"Map already initialized, skipping initialization.\");\n//       }\n//     };\n\n//     createMap();\n\n//     return () => {\n//       if (mapInstance.current) {\n//         mapInstance.current.remove();\n//         mapInstance.current = null;\n//       }\n//     };\n//   }, [logsData]);\n\n//   return <div id=\"map\" ref={mapRef} style={{ height: \"500px\" }}></div>;\n// };\n\n// export default MapComponent;\n\n// ----------------- Routing for only the start, pickup and dropoff locations\n// import React, { useEffect, useRef } from \"react\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\n// import \"leaflet-routing-machine\";\n// import \"./MapComponent.css\";\n\n// // Fix for Leaflet icon path (Method 1)\n// delete L.Icon.Default.prototype._getIconUrl;\n\n// L.Icon.Default.mergeOptions({\n//   iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n//   iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n//   shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n// });\n\n// const MapComponent = ({ logsData, tripId }) => {\n//   const mapRef = useRef(null);\n//   const mapInstance = useRef(null);\n\n//   useEffect(() => {\n//     const createMap = async () => {\n//       if (!mapRef.current) return;\n\n//       const existingMap = L.DomUtil.get(\"map\");\n//       if (!existingMap?._leaflet_id) {\n//         const map = L.map(mapRef.current, {\n//           center: [40.7128, -74.006],\n//           zoom: 6,\n//           scrollWheelZoom: false,\n//         });\n\n//         L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//           attribution:\n//             '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//         }).addTo(map);\n\n//         if (logsData != null && logsData.length > 0) {\n//           const startLog = logsData[0];\n//           const pickupLog = logsData[9];\n//           const dropoffLog = logsData[10];\n\n//           if (!startLog || !pickupLog || !dropoffLog) {\n//             console.error(\n//               \"Missing log entries for start, pickup, or dropoff location. Length of the logs is:\",\n//               logsData.length\n//             );\n//             return;\n//           }\n\n//           const startCoords = [startLog.latitude, startLog.longitude];\n//           const pickupCoords = [pickupLog.latitude, pickupLog.longitude];\n//           const dropoffCoords = [dropoffLog.latitude, dropoffLog.longitude];\n\n//           // Create custom icons\n//           const startIcon = L.icon({\n//             iconUrl:\n//               \"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png\", // green\n//             shadowUrl:\n//               \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n//             iconSize: [25, 41],\n//             iconAnchor: [12, 41],\n//             popupAnchor: [1, -34],\n//             shadowSize: [41, 41],\n//           });\n\n//           const pickupIcon = L.icon({\n//             iconUrl:\n//               \"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png\", // blue\n//             shadowUrl:\n//               \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n//             iconSize: [25, 41],\n//             iconAnchor: [12, 41],\n//             popupAnchor: [1, -34],\n//             shadowSize: [41, 41],\n//           });\n\n//           const dropoffIcon = L.icon({\n//             iconUrl:\n//               \"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png\", // red\n//             shadowUrl:\n//               \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n//             iconSize: [25, 41],\n//             iconAnchor: [12, 41],\n//             popupAnchor: [1, -34],\n//             shadowSize: [41, 41],\n//           });\n\n//           // Add start, pickup, and dropoff markers\n//           L.marker(startCoords, { icon: startIcon })\n//             .addTo(map)\n//             .bindPopup(\n//               `${startLog.location}<br>Duty Status: ${startLog.duty_status}<br>Remarks: ${startLog.remarks}`\n//             );\n\n//           L.marker(pickupCoords, { icon: pickupIcon })\n//             .addTo(map)\n//             .bindPopup(\n//               `${pickupLog.location}<br>Duty Status: ${pickupLog.duty_status}<br>Remarks: ${pickupLog.remarks}`\n//             );\n\n//           L.marker(dropoffCoords, { icon: dropoffIcon })\n//             .addTo(map)\n//             .bindPopup(\n//               `${dropoffLog.location}<br>Duty Status: ${dropoffLog.duty_status}<br>Remarks: ${dropoffLog.remarks}`\n//             );\n\n//           // Add intermediate location markers\n//           logsData.forEach((log, index) => {\n//             if (index !== 0 && index !== 9 && index !== 10) {\n//               // Exclude start, pickup, and dropoff locations\n//               L.marker([log.latitude, log.longitude])\n//                 .addTo(map)\n//                 .bindPopup(\n//                   `${log.location}<br>Duty Status: ${log.duty_status}<br>Remarks: ${log.remarks}`\n//                 );\n//             }\n//           });\n\n//           // Create Routing Control (with intermediate waypoints)\n//           L.Routing.control({\n//             waypoints: [\n//               L.latLng(startCoords),\n//               L.latLng(pickupCoords),\n//               L.latLng(dropoffCoords),\n//             ],\n//             routeWhileDragging: false,\n//             showAlternatives: false,\n//             serviceUrl: \"http://router.project-osrm.org/route/v1\",\n//           }).addTo(map);\n//         }\n\n//         mapInstance.current = map;\n//       } else {\n//         console.log(\"Map already initialized, skipping initialization.\");\n//       }\n//     };\n\n//     createMap();\n\n//     return () => {\n//       if (mapInstance.current) {\n//         mapInstance.current.remove();\n//         mapInstance.current = null;\n//       }\n//     };\n//   }, [logsData]);\n\n//   return <div id=\"map\" ref={mapRef} style={{ height: \"500px\" }}></div>;\n// };\n\n// export default MapComponent;\n\n// import React, { useEffect, useRef } from \"react\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\n// import \"leaflet-routing-machine\";\n// import \"./MapComponent.css\";\n\n// // Fix for Leaflet icon path (Method 1)\n// delete L.Icon.Default.prototype._getIconUrl;\n\n// L.Icon.Default.mergeOptions({\n//   iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n//   iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n//   shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n// });\n\n// const MapComponent = ({ logsData, tripId }) => {\n//   const mapRef = useRef(null);\n//   const mapInstance = useRef(null);\n\n//   useEffect(() => {\n//     const createMap = async () => {\n//       if (!mapRef.current) return;\n\n//       const existingMap = L.DomUtil.get(\"map\");\n//       if (!existingMap?._leaflet_id) {\n//         const map = L.map(mapRef.current, {\n//           center: [40.7128, -74.006],\n//           zoom: 6,\n//           scrollWheelZoom: false,\n//         });\n\n//         L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//           attribution:\n//             '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//         }).addTo(map);\n\n//         if (logsData != null && logsData.length > 0) {\n//           const startLog = logsData[0];\n//           const pickupLog = logsData[9];\n//           const dropoffLog = logsData[10];\n\n//           if (!startLog || !pickupLog || !dropoffLog) {\n//             console.error(\n//               \"Missing log entries for start, pickup, or dropoff location. Length of the logs is:\",\n//               logsData.length\n//             );\n//             return;\n//           }\n\n//           const startCoords = [startLog.latitude, startLog.longitude];\n//           const pickupCoords = [pickupLog.latitude, pickupLog.longitude];\n//           const dropoffCoords = [dropoffLog.latitude, dropoffLog.longitude];\n\n//           // Create custom icons\n//           const startIcon = L.icon({\n//             iconUrl:\n//               \"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png\", // green\n//             shadowUrl:\n//               \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n//             iconSize: [25, 41],\n//             iconAnchor: [12, 41],\n//             popupAnchor: [1, -34],\n//             shadowSize: [41, 41],\n//           });\n\n//           const pickupIcon = L.icon({\n//             iconUrl:\n//               \"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png\", // blue\n//             shadowUrl:\n//               \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n//             iconSize: [25, 41],\n//             iconAnchor: [12, 41],\n//             popupAnchor: [1, -34],\n//             shadowSize: [41, 41],\n//           });\n\n//           const dropoffIcon = L.icon({\n//             iconUrl:\n//               \"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png\", // red\n//             shadowUrl:\n//               \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n//             iconSize: [25, 41],\n//             iconAnchor: [12, 41],\n//             popupAnchor: [1, -34],\n//             shadowSize: [41, 41],\n//           });\n\n//           // Add start, pickup, and dropoff markers\n//           const startMarker = L.marker(startCoords, { icon: startIcon })\n//             .addTo(map)\n//             .bindPopup(\n//               `${startLog.location}<br>Duty Status: ${startLog.duty_status}<br>Remarks: ${startLog.remarks}`\n//             );\n\n//           const pickupMarker = L.marker(pickupCoords, { icon: pickupIcon })\n//             .addTo(map)\n//             .bindPopup(\n//               `${pickupLog.location}<br>Duty Status: ${pickupLog.duty_status}<br>Remarks: ${pickupLog.remarks}`\n//             );\n\n//           const dropoffMarker = L.marker(dropoffCoords, { icon: dropoffIcon })\n//             .addTo(map)\n//             .bindPopup(\n//               `${dropoffLog.location}<br>Duty Status: ${dropoffLog.duty_status}<br>Remarks: ${dropoffLog.remarks}`\n//             );\n\n//           // Open popup on mouseover, close on mouseout\n//           startMarker.on(\"mouseover\", function () {\n//             this.openPopup();\n//           });\n//           startMarker.on(\"mouseout\", function () {\n//             this.closePopup();\n//           });\n\n//           pickupMarker.on(\"mouseover\", function () {\n//             this.openPopup();\n//           });\n//           pickupMarker.on(\"mouseout\", function () {\n//             this.closePopup();\n//           });\n\n//           dropoffMarker.on(\"mouseover\", function () {\n//             this.openPopup();\n//           });\n//           dropoffMarker.on(\"mouseout\", function () {\n//             this.closePopup();\n//           });\n\n//           // Add intermediate location markers\n//           logsData.forEach((log, index) => {\n//             if (index !== 0 && index !== 9 && index !== 10) {\n//               // Exclude start, pickup, and dropoff locations\n//               const intermediateMarker = L.marker([log.latitude, log.longitude])\n//                 .addTo(map)\n//                 .bindPopup(\n//                   `${log.location}<br>Duty Status: ${log.duty_status}<br>Remarks: ${log.remarks}`\n//                 );\n\n//               intermediateMarker.on(\"mouseover\", function () {\n//                 this.openPopup();\n//               });\n//               intermediateMarker.on(\"mouseout\", function () {\n//                 this.closePopup();\n//               });\n//             }\n//           });\n\n//           // Create Waypoints including all Stops\n//           const waypoints = logsData.map((log) =>\n//             L.latLng(log.latitude, log.longitude)\n//           );\n\n//           // Create Routing Control (with intermediate waypoints)\n//           L.Routing.control({\n//             waypoints: waypoints,\n//             routeWhileDragging: false,\n//             showAlternatives: false,\n//             serviceUrl: \"http://router.project-osrm.org/route/v1\",\n//           }).addTo(map);\n//         }\n\n//         mapInstance.current = map;\n//       } else {\n//         console.log(\"Map already initialized, skipping initialization.\");\n//       }\n//     };\n\n//     createMap();\n\n//     return () => {\n//       if (mapInstance.current) {\n//         mapInstance.current.remove();\n//         mapInstance.current = null;\n//       }\n//     };\n//   }, [logsData]);\n\n//   return <div id=\"map\" ref={mapRef} style={{ height: \"500px\" }}></div>;\n// };\n\n// export default MapComponent;","map":{"version":3,"names":[],"sources":["/Users/imaadfakier/Desktop/incomes/primary/corporate/hiring_process_tracker/spotter_ai/spotter_ai_logbook/react-frontend/src/MapComponent.jsx"],"sourcesContent":["// import React, { useEffect, useRef } from \"react\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\n// import \"leaflet-routing-machine\";\n// import \"./MapComponent.css\";\n\n// // Fix for Leaflet icon path (Method 1)\n// delete L.Icon.Default.prototype._getIconUrl;\n\n// L.Icon.Default.mergeOptions({\n//   iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n//   iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n//   shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n// });\n\n// const MapComponent = ({ startLocation, pickupLocation, dropoffLocation }) => {\n//   // console.log(startLocation, pickupLocation, dropoffLocation);\n\n//   const mapRef = useRef(null); // Ref to the map container div\n//   const mapInstance = useRef(null); // Ref to store the leaflet map instance\n\n//   useEffect(() => {\n//     const createMap = async () => {\n//       if (mapRef.current) {\n//         // Check if the map container exists AND the map hasn't been initialized yet using L.DomUtil.get\n//         const existingMap = L.DomUtil.get(\"map\"); // Use L.DomUtil.get to check if map already exists\n\n//         if (!existingMap?._leaflet_id) {\n//           // Only initialize if the map hasn't been initialized on this element\n//           const map = L.map(mapRef.current, {\n//             center: [40.7128, -74.006],\n//             zoom: 8,\n//             scrollWheelZoom: false,\n//           });\n\n//           L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//             attribution:\n//               '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//           }).addTo(map);\n\n//           // Geocoding function (replace with a real geocoding service)\n//           const geocode = async (location) => {\n//             console.warn(\n//               \"Geocoding is not fully implemented -- using a dummy lat/lon value\"\n//             );\n//             switch (location) {\n//               case \"Miami, FL\":\n//                 return [25.7617, -80.1918]; // Miami coordinates\n//               case \"Orlando, FL\":\n//                 return [28.5383, -81.3792]; // Orlando coordinates\n//               case \"Jacksonville, FL\":\n//                 return [30.3322, -81.6557]; // Jacksonville coordinates\n//               default:\n//                 return null;\n//             }\n//           };\n\n//           const createRoutingControl = async () => {\n//             const startCoords = await geocode(startLocation);\n//             const pickupCoords = await geocode(pickupLocation);\n//             const dropoffCoords = await geocode(dropoffLocation);\n\n//             if (!startCoords || !pickupCoords || !dropoffCoords) {\n//               console.error(\"Could not geocode all locations\");\n//               return;\n//             }\n\n//             L.Routing.control({\n//               waypoints: [\n//                 L.latLng(startCoords),\n//                 L.latLng(pickupCoords),\n//                 L.latLng(dropoffCoords),\n//               ],\n//               routeWhileDragging: false,\n//               showAlternatives: false,\n//               serviceUrl: \"http://router.project-osrm.org/route/v1\",\n//             }).addTo(map);\n//           };\n\n//           await createRoutingControl(); // Make sure the routing is added after geocoding\n\n//           mapInstance.current = map; // Store the map instance in the ref\n//         } else {\n//           console.log(\"Map already initialized, skipping initialization.\");\n//         }\n//       }\n//     };\n\n//     createMap();\n\n//     return () => {\n//       if (mapInstance.current) {\n//         mapInstance.current.remove(); // Clean up the map on unmount\n//       }\n//     };\n//   }, [startLocation, pickupLocation, dropoffLocation]); // Dependencies for the useEffect\n\n//   return <div id=\"map\" ref={mapRef} style={{ height: \"500px\" }}></div>;\n// };\n\n// export default MapComponent;\n\n// import React, { useEffect, useRef } from \"react\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\n// import \"leaflet-routing-machine\";\n// import \"./MapComponent.css\";\n\n// // Fix for Leaflet icon path (Method 1)\n// delete L.Icon.Default.prototype._getIconUrl;\n\n// L.Icon.Default.mergeOptions({\n//   iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n//   iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n//   shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n// });\n\n// const MapComponent = ({ logsData, tripId }) => {\n//   const mapRef = useRef(null);\n//   const mapInstance = useRef(null);\n\n//   useEffect(() => {\n//     const createMap = async () => {\n//       if (!mapRef.current) return; // Handle null mapRef.current and only continue if present\n\n//       const existingMap = L.DomUtil.get(\"map\");\n//       if (!existingMap?._leaflet_id) {\n//         const map = L.map(mapRef.current, {\n//           center: [40.7128, -74.006],\n//           zoom: 8,\n//           scrollWheelZoom: false,\n//         });\n\n//         L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//           attribution:\n//             '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//         }).addTo(map);\n\n//         if (logsData != null && logsData.length > 0) {\n//           const startLog = logsData?.[0];\n//           const pickupLog = logsData?.[8];\n//           const dropoffLog = logsData?.[10];\n\n//           if (!startLog || !pickupLog || !dropoffLog) {\n//             console.error(\n//               \"Missing log entries for start, pickup, or dropoff location.  Length of the logs is:\",\n//               logsData.length\n//             );\n//             return;\n//           }\n\n//           const startCoords = [startLog.latitude, startLog.longitude];\n//           const pickupCoords = [pickupLog.latitude, pickupLog.longitude];\n//           const dropoffCoords = [dropoffLog.latitude, dropoffLog.longitude];\n\n//           // Create Routing Control\n//           L.Routing.control({\n//             waypoints: [\n//               L.latLng(startCoords),\n//               L.latLng(pickupCoords),\n//               L.latLng(dropoffCoords),\n//             ],\n//             routeWhileDragging: false,\n//             showAlternatives: false,\n//             serviceUrl: \"http://router.project-osrm.org/route/v1\",\n//           }).addTo(map);\n//         }\n\n//         mapInstance.current = map;\n//       } else {\n//         console.log(\"Map already initialized, skipping initialization.\");\n//       }\n//     };\n\n//     createMap();\n\n//     return () => {\n//       if (mapInstance.current) {\n//         mapInstance.current.remove();\n//         mapInstance.current = null;\n//       }\n//     };\n//   }, [logsData]);\n\n//   return <div id=\"map\" ref={mapRef} style={{ height: \"500px\" }}></div>;\n// };\n\n// export default MapComponent;\n\n// import React, { useEffect, useRef } from \"react\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\n// import \"leaflet-routing-machine\";\n// import \"./MapComponent.css\";\n\n// // Fix for Leaflet icon path (Method 1)\n// delete L.Icon.Default.prototype._getIconUrl;\n\n// L.Icon.Default.mergeOptions({\n//   iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n//   iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n//   shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n// });\n\n// const MapComponent = ({ logsData, tripId }) => {\n//   const mapRef = useRef(null);\n//   const mapInstance = useRef(null);\n\n//   useEffect(() => {\n//     const createMap = async () => {\n//       if (!mapRef.current) return; // Handle null mapRef.current and only continue if present\n\n//       const existingMap = L.DomUtil.get(\"map\");\n//       if (!existingMap?._leaflet_id) {\n//         const map = L.map(mapRef.current, {\n//           center: [40.7128, -74.006],\n//           zoom: 6, // Increased zoom out for better visibility of longer routes\n//           scrollWheelZoom: false,\n//         });\n\n//         L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//           attribution:\n//             '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//         }).addTo(map);\n\n//         if (logsData != null && logsData.length > 0) {\n//           const startLog = logsData?.[0];\n//           const pickupLog = logsData?.[9];\n//           const dropoffLog = logsData?.[10];\n\n//           if (!startLog || !pickupLog || !dropoffLog) {\n//             console.error(\n//               \"Missing log entries for start, pickup, or dropoff location.  Length of the logs is:\",\n//               logsData.length\n//             );\n//             return;\n//           }\n\n//           const startCoords = [startLog.latitude, startLog.longitude];\n//           const pickupCoords = [pickupLog.latitude, pickupLog.longitude];\n//           const dropoffCoords = [dropoffLog.latitude, dropoffLog.longitude];\n\n//           // Add intermediate location markers\n//           logsData\n//             .map((log, index) => {\n//               if (index !== 0 && index !== 9 && index !== 10) {\n//                 // Exclude start, pickup, and dropoff locations\n//                 return L.marker([log.latitude, log.longitude])\n//                   .addTo(map)\n//                   .bindPopup(\n//                     `${log.location}<br>Duty Status: ${log.duty_status}<br>Remarks: ${log.remarks}`\n//                   );\n//               }\n//               return null;\n//             })\n//             .filter((waypoint) => waypoint !== null);\n\n//           // Create Routing Control (with intermediate waypoints)\n//           L.Routing.control({\n//             waypoints: [\n//               L.latLng(startCoords),\n//               L.latLng(pickupCoords),\n//               L.latLng(dropoffCoords),\n//             ],\n//             routeWhileDragging: false,\n//             showAlternatives: false,\n//             serviceUrl: \"http://router.project-osrm.org/route/v1\",\n//           }).addTo(map);\n//         }\n\n//         mapInstance.current = map;\n//       } else {\n//         console.log(\"Map already initialized, skipping initialization.\");\n//       }\n//     };\n\n//     createMap();\n\n//     return () => {\n//       if (mapInstance.current) {\n//         mapInstance.current.remove();\n//         mapInstance.current = null;\n//       }\n//     };\n//   }, [logsData]);\n\n//   return <div id=\"map\" ref={mapRef} style={{ height: \"500px\" }}></div>;\n// };\n\n// export default MapComponent;\n\n\n// ----------------- Routing for only the start, pickup and dropoff locations\n// import React, { useEffect, useRef } from \"react\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\n// import \"leaflet-routing-machine\";\n// import \"./MapComponent.css\";\n\n// // Fix for Leaflet icon path (Method 1)\n// delete L.Icon.Default.prototype._getIconUrl;\n\n// L.Icon.Default.mergeOptions({\n//   iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n//   iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n//   shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n// });\n\n// const MapComponent = ({ logsData, tripId }) => {\n//   const mapRef = useRef(null);\n//   const mapInstance = useRef(null);\n\n//   useEffect(() => {\n//     const createMap = async () => {\n//       if (!mapRef.current) return;\n\n//       const existingMap = L.DomUtil.get(\"map\");\n//       if (!existingMap?._leaflet_id) {\n//         const map = L.map(mapRef.current, {\n//           center: [40.7128, -74.006],\n//           zoom: 6,\n//           scrollWheelZoom: false,\n//         });\n\n//         L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//           attribution:\n//             '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//         }).addTo(map);\n\n//         if (logsData != null && logsData.length > 0) {\n//           const startLog = logsData[0];\n//           const pickupLog = logsData[9];\n//           const dropoffLog = logsData[10];\n\n//           if (!startLog || !pickupLog || !dropoffLog) {\n//             console.error(\n//               \"Missing log entries for start, pickup, or dropoff location. Length of the logs is:\",\n//               logsData.length\n//             );\n//             return;\n//           }\n\n//           const startCoords = [startLog.latitude, startLog.longitude];\n//           const pickupCoords = [pickupLog.latitude, pickupLog.longitude];\n//           const dropoffCoords = [dropoffLog.latitude, dropoffLog.longitude];\n\n//           // Create custom icons\n//           const startIcon = L.icon({\n//             iconUrl:\n//               \"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png\", // green\n//             shadowUrl:\n//               \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n//             iconSize: [25, 41],\n//             iconAnchor: [12, 41],\n//             popupAnchor: [1, -34],\n//             shadowSize: [41, 41],\n//           });\n\n//           const pickupIcon = L.icon({\n//             iconUrl:\n//               \"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png\", // blue\n//             shadowUrl:\n//               \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n//             iconSize: [25, 41],\n//             iconAnchor: [12, 41],\n//             popupAnchor: [1, -34],\n//             shadowSize: [41, 41],\n//           });\n\n//           const dropoffIcon = L.icon({\n//             iconUrl:\n//               \"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png\", // red\n//             shadowUrl:\n//               \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n//             iconSize: [25, 41],\n//             iconAnchor: [12, 41],\n//             popupAnchor: [1, -34],\n//             shadowSize: [41, 41],\n//           });\n\n//           // Add start, pickup, and dropoff markers\n//           L.marker(startCoords, { icon: startIcon })\n//             .addTo(map)\n//             .bindPopup(\n//               `${startLog.location}<br>Duty Status: ${startLog.duty_status}<br>Remarks: ${startLog.remarks}`\n//             );\n\n//           L.marker(pickupCoords, { icon: pickupIcon })\n//             .addTo(map)\n//             .bindPopup(\n//               `${pickupLog.location}<br>Duty Status: ${pickupLog.duty_status}<br>Remarks: ${pickupLog.remarks}`\n//             );\n\n//           L.marker(dropoffCoords, { icon: dropoffIcon })\n//             .addTo(map)\n//             .bindPopup(\n//               `${dropoffLog.location}<br>Duty Status: ${dropoffLog.duty_status}<br>Remarks: ${dropoffLog.remarks}`\n//             );\n\n//           // Add intermediate location markers\n//           logsData.forEach((log, index) => {\n//             if (index !== 0 && index !== 9 && index !== 10) {\n//               // Exclude start, pickup, and dropoff locations\n//               L.marker([log.latitude, log.longitude])\n//                 .addTo(map)\n//                 .bindPopup(\n//                   `${log.location}<br>Duty Status: ${log.duty_status}<br>Remarks: ${log.remarks}`\n//                 );\n//             }\n//           });\n\n//           // Create Routing Control (with intermediate waypoints)\n//           L.Routing.control({\n//             waypoints: [\n//               L.latLng(startCoords),\n//               L.latLng(pickupCoords),\n//               L.latLng(dropoffCoords),\n//             ],\n//             routeWhileDragging: false,\n//             showAlternatives: false,\n//             serviceUrl: \"http://router.project-osrm.org/route/v1\",\n//           }).addTo(map);\n//         }\n\n//         mapInstance.current = map;\n//       } else {\n//         console.log(\"Map already initialized, skipping initialization.\");\n//       }\n//     };\n\n//     createMap();\n\n//     return () => {\n//       if (mapInstance.current) {\n//         mapInstance.current.remove();\n//         mapInstance.current = null;\n//       }\n//     };\n//   }, [logsData]);\n\n//   return <div id=\"map\" ref={mapRef} style={{ height: \"500px\" }}></div>;\n// };\n\n// export default MapComponent;\n\n// import React, { useEffect, useRef } from \"react\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\n// import \"leaflet-routing-machine\";\n// import \"./MapComponent.css\";\n\n// // Fix for Leaflet icon path (Method 1)\n// delete L.Icon.Default.prototype._getIconUrl;\n\n// L.Icon.Default.mergeOptions({\n//   iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n//   iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n//   shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n// });\n\n// const MapComponent = ({ logsData, tripId }) => {\n//   const mapRef = useRef(null);\n//   const mapInstance = useRef(null);\n\n//   useEffect(() => {\n//     const createMap = async () => {\n//       if (!mapRef.current) return;\n\n//       const existingMap = L.DomUtil.get(\"map\");\n//       if (!existingMap?._leaflet_id) {\n//         const map = L.map(mapRef.current, {\n//           center: [40.7128, -74.006],\n//           zoom: 6,\n//           scrollWheelZoom: false,\n//         });\n\n//         L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//           attribution:\n//             '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//         }).addTo(map);\n\n//         if (logsData != null && logsData.length > 0) {\n//           const startLog = logsData[0];\n//           const pickupLog = logsData[9];\n//           const dropoffLog = logsData[10];\n\n//           if (!startLog || !pickupLog || !dropoffLog) {\n//             console.error(\n//               \"Missing log entries for start, pickup, or dropoff location. Length of the logs is:\",\n//               logsData.length\n//             );\n//             return;\n//           }\n\n//           const startCoords = [startLog.latitude, startLog.longitude];\n//           const pickupCoords = [pickupLog.latitude, pickupLog.longitude];\n//           const dropoffCoords = [dropoffLog.latitude, dropoffLog.longitude];\n\n//           // Create custom icons\n//           const startIcon = L.icon({\n//             iconUrl:\n//               \"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png\", // green\n//             shadowUrl:\n//               \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n//             iconSize: [25, 41],\n//             iconAnchor: [12, 41],\n//             popupAnchor: [1, -34],\n//             shadowSize: [41, 41],\n//           });\n\n//           const pickupIcon = L.icon({\n//             iconUrl:\n//               \"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png\", // blue\n//             shadowUrl:\n//               \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n//             iconSize: [25, 41],\n//             iconAnchor: [12, 41],\n//             popupAnchor: [1, -34],\n//             shadowSize: [41, 41],\n//           });\n\n//           const dropoffIcon = L.icon({\n//             iconUrl:\n//               \"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png\", // red\n//             shadowUrl:\n//               \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n//             iconSize: [25, 41],\n//             iconAnchor: [12, 41],\n//             popupAnchor: [1, -34],\n//             shadowSize: [41, 41],\n//           });\n\n//           // Add start, pickup, and dropoff markers\n//           const startMarker = L.marker(startCoords, { icon: startIcon })\n//             .addTo(map)\n//             .bindPopup(\n//               `${startLog.location}<br>Duty Status: ${startLog.duty_status}<br>Remarks: ${startLog.remarks}`\n//             );\n\n//           const pickupMarker = L.marker(pickupCoords, { icon: pickupIcon })\n//             .addTo(map)\n//             .bindPopup(\n//               `${pickupLog.location}<br>Duty Status: ${pickupLog.duty_status}<br>Remarks: ${pickupLog.remarks}`\n//             );\n\n//           const dropoffMarker = L.marker(dropoffCoords, { icon: dropoffIcon })\n//             .addTo(map)\n//             .bindPopup(\n//               `${dropoffLog.location}<br>Duty Status: ${dropoffLog.duty_status}<br>Remarks: ${dropoffLog.remarks}`\n//             );\n\n//           // Open popup on mouseover, close on mouseout\n//           startMarker.on(\"mouseover\", function () {\n//             this.openPopup();\n//           });\n//           startMarker.on(\"mouseout\", function () {\n//             this.closePopup();\n//           });\n\n//           pickupMarker.on(\"mouseover\", function () {\n//             this.openPopup();\n//           });\n//           pickupMarker.on(\"mouseout\", function () {\n//             this.closePopup();\n//           });\n\n//           dropoffMarker.on(\"mouseover\", function () {\n//             this.openPopup();\n//           });\n//           dropoffMarker.on(\"mouseout\", function () {\n//             this.closePopup();\n//           });\n\n//           // Add intermediate location markers\n//           logsData.forEach((log, index) => {\n//             if (index !== 0 && index !== 9 && index !== 10) {\n//               // Exclude start, pickup, and dropoff locations\n//               const intermediateMarker = L.marker([log.latitude, log.longitude])\n//                 .addTo(map)\n//                 .bindPopup(\n//                   `${log.location}<br>Duty Status: ${log.duty_status}<br>Remarks: ${log.remarks}`\n//                 );\n\n//               intermediateMarker.on(\"mouseover\", function () {\n//                 this.openPopup();\n//               });\n//               intermediateMarker.on(\"mouseout\", function () {\n//                 this.closePopup();\n//               });\n//             }\n//           });\n\n//           // Create Waypoints including all Stops\n//           const waypoints = logsData.map((log) =>\n//             L.latLng(log.latitude, log.longitude)\n//           );\n\n//           // Create Routing Control (with intermediate waypoints)\n//           L.Routing.control({\n//             waypoints: waypoints,\n//             routeWhileDragging: false,\n//             showAlternatives: false,\n//             serviceUrl: \"http://router.project-osrm.org/route/v1\",\n//           }).addTo(map);\n//         }\n\n//         mapInstance.current = map;\n//       } else {\n//         console.log(\"Map already initialized, skipping initialization.\");\n//       }\n//     };\n\n//     createMap();\n\n//     return () => {\n//       if (mapInstance.current) {\n//         mapInstance.current.remove();\n//         mapInstance.current = null;\n//       }\n//     };\n//   }, [logsData]);\n\n//   return <div id=\"map\" ref={mapRef} style={{ height: \"500px\" }}></div>;\n// };\n\n// export default MapComponent;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}