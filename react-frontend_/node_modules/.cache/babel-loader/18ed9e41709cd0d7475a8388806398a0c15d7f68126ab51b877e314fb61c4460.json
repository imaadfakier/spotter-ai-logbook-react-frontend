{"ast":null,"code":"var _jsxFileName = \"/Users/imaadfakier/Desktop/incomes/primary/corporate/hiring_process_tracker/spotter_ai/spotter_ai_logbook/react-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport MapComponent from \"./MapComponent\";\nimport DailyLogSheet from \"./DailyLogSheet\";\nimport TripForm from \"./TripForm\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [logEntries, setLogEntries] = useState([]);\n  const [tripDetails, setTripDetails] = useState(null);\n  const handleFormSubmit = async (tripData, tripExists = false, existingTrip = null) => {\n    let tripId;\n    if (tripExists) {\n      tripId = existingTrip.id;\n      setTripDetails(existingTrip);\n    } else {\n      // First, create the trip in the backend\n      const response = await fetch(\"/api/trips/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(tripData)\n      });\n      if (!response.ok) {\n        console.error(\"Error creating trip:\", response.status);\n        return;\n      }\n      const newTrip = await response.json();\n      tripId = newTrip.id;\n      setTripDetails(newTrip);\n    }\n\n    // Then, generate logs for the trip\n    const logsResponse = await fetch(`/api/trips/${tripId}/generate_logs/`, {\n      method: \"POST\"\n    });\n    if (!logsResponse.ok) {\n      console.error(\"Error generating logs:\", logsResponse.status);\n      return;\n    }\n\n    // Finally, fetch the generated logs\n    const logsDataResponse = await fetch(`/api/trips/${tripId}/logs/`);\n    if (!logsDataResponse.ok) {\n      console.error(\"Error fetching logs:\", logsDataResponse.status);\n      return;\n    }\n    const logsData = await logsDataResponse.json();\n    setLogEntries(logsData);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Trucker Logbook App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(TripForm, {\n          onSubmit: handleFormSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: tripDetails && /*#__PURE__*/_jsxDEV(MapComponent, {\n          startLocation: tripDetails.startLocation,\n          pickupLocation: tripDetails.pickupLocation,\n          dropoffLocation: tripDetails.dropoffLocation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: logEntries.length > 0 && /*#__PURE__*/_jsxDEV(DailyLogSheet, {\n          logEntries: logEntries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"auafVyRLewD+e81qSEY17OGcV9Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MapComponent","DailyLogSheet","TripForm","Container","Row","Col","jsxDEV","_jsxDEV","App","_s","logEntries","setLogEntries","tripDetails","setTripDetails","handleFormSubmit","tripData","tripExists","existingTrip","tripId","id","response","fetch","method","headers","body","JSON","stringify","ok","console","error","status","newTrip","json","logsResponse","logsDataResponse","logsData","children","fileName","_jsxFileName","lineNumber","columnNumber","md","onSubmit","startLocation","pickupLocation","dropoffLocation","length","_c","$RefreshReg$"],"sources":["/Users/imaadfakier/Desktop/incomes/primary/corporate/hiring_process_tracker/spotter_ai/spotter_ai_logbook/react-frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport MapComponent from \"./MapComponent\";\nimport DailyLogSheet from \"./DailyLogSheet\";\nimport TripForm from \"./TripForm\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nfunction App() {\n  const [logEntries, setLogEntries] = useState([]);\n  const [tripDetails, setTripDetails] = useState(null);\n\n  const handleFormSubmit = async (\n    tripData,\n    tripExists = false,\n    existingTrip = null\n  ) => {\n    let tripId;\n    if (tripExists) {\n      tripId = existingTrip.id;\n      setTripDetails(existingTrip);\n    } else {\n      // First, create the trip in the backend\n      const response = await fetch(\"/api/trips/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(tripData),\n      });\n      if (!response.ok) {\n        console.error(\"Error creating trip:\", response.status);\n        return;\n      }\n      const newTrip = await response.json();\n      tripId = newTrip.id;\n      setTripDetails(newTrip);\n    }\n\n    // Then, generate logs for the trip\n    const logsResponse = await fetch(`/api/trips/${tripId}/generate_logs/`, {\n      method: \"POST\",\n    });\n\n    if (!logsResponse.ok) {\n      console.error(\"Error generating logs:\", logsResponse.status);\n      return;\n    }\n\n    // Finally, fetch the generated logs\n    const logsDataResponse = await fetch(`/api/trips/${tripId}/logs/`);\n    if (!logsDataResponse.ok) {\n      console.error(\"Error fetching logs:\", logsDataResponse.status);\n      return;\n    }\n\n    const logsData = await logsDataResponse.json();\n    setLogEntries(logsData);\n  };\n\n  return (\n    <Container>\n      <h1>Trucker Logbook App</h1>\n      <Row>\n        <Col md={6}>\n          <TripForm onSubmit={handleFormSubmit} />\n        </Col>\n        <Col md={6}>\n          {tripDetails && (\n            <MapComponent\n              startLocation={tripDetails.startLocation}\n              pickupLocation={tripDetails.pickupLocation}\n              dropoffLocation={tripDetails.dropoffLocation}\n            />\n          )}\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          {logEntries.length > 0 && <DailyLogSheet logEntries={logEntries} />}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMe,gBAAgB,GAAG,MAAAA,CACvBC,QAAQ,EACRC,UAAU,GAAG,KAAK,EAClBC,YAAY,GAAG,IAAI,KAChB;IACH,IAAIC,MAAM;IACV,IAAIF,UAAU,EAAE;MACdE,MAAM,GAAGD,YAAY,CAACE,EAAE;MACxBN,cAAc,CAACI,YAAY,CAAC;IAC9B,CAAC,MAAM;MACL;MACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,EAAE;QAC1CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,QAAQ;MAC/B,CAAC,CAAC;MACF,IAAI,CAACK,QAAQ,CAACO,EAAE,EAAE;QAChBC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAET,QAAQ,CAACU,MAAM,CAAC;QACtD;MACF;MACA,MAAMC,OAAO,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;MACrCd,MAAM,GAAGa,OAAO,CAACZ,EAAE;MACnBN,cAAc,CAACkB,OAAO,CAAC;IACzB;;IAEA;IACA,MAAME,YAAY,GAAG,MAAMZ,KAAK,CAAC,cAAcH,MAAM,iBAAiB,EAAE;MACtEI,MAAM,EAAE;IACV,CAAC,CAAC;IAEF,IAAI,CAACW,YAAY,CAACN,EAAE,EAAE;MACpBC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEI,YAAY,CAACH,MAAM,CAAC;MAC5D;IACF;;IAEA;IACA,MAAMI,gBAAgB,GAAG,MAAMb,KAAK,CAAC,cAAcH,MAAM,QAAQ,CAAC;IAClE,IAAI,CAACgB,gBAAgB,CAACP,EAAE,EAAE;MACxBC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEK,gBAAgB,CAACJ,MAAM,CAAC;MAC9D;IACF;IAEA,MAAMK,QAAQ,GAAG,MAAMD,gBAAgB,CAACF,IAAI,CAAC,CAAC;IAC9CrB,aAAa,CAACwB,QAAQ,CAAC;EACzB,CAAC;EAED,oBACE5B,OAAA,CAACJ,SAAS;IAAAiC,QAAA,gBACR7B,OAAA;MAAA6B,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BjC,OAAA,CAACH,GAAG;MAAAgC,QAAA,gBACF7B,OAAA,CAACF,GAAG;QAACoC,EAAE,EAAE,CAAE;QAAAL,QAAA,eACT7B,OAAA,CAACL,QAAQ;UAACwC,QAAQ,EAAE5B;QAAiB;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eACNjC,OAAA,CAACF,GAAG;QAACoC,EAAE,EAAE,CAAE;QAAAL,QAAA,EACRxB,WAAW,iBACVL,OAAA,CAACP,YAAY;UACX2C,aAAa,EAAE/B,WAAW,CAAC+B,aAAc;UACzCC,cAAc,EAAEhC,WAAW,CAACgC,cAAe;UAC3CC,eAAe,EAAEjC,WAAW,CAACiC;QAAgB;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C;MACF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNjC,OAAA,CAACH,GAAG;MAAAgC,QAAA,eACF7B,OAAA,CAACF,GAAG;QAAA+B,QAAA,EACD1B,UAAU,CAACoC,MAAM,GAAG,CAAC,iBAAIvC,OAAA,CAACN,aAAa;UAACS,UAAU,EAAEA;QAAW;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB;AAAC/B,EAAA,CA5EQD,GAAG;AAAAuC,EAAA,GAAHvC,GAAG;AA8EZ,eAAeA,GAAG;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}