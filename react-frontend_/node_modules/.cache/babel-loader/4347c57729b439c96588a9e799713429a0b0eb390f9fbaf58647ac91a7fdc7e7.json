{"ast":null,"code":"var _jsxFileName = \"/Users/imaadfakier/Desktop/incomes/primary/corporate/hiring_process_tracker/spotter_ai/spotter_ai_logbook/react-frontend/src/MapComponent.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useRef } from \"react\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\n// import \"leaflet-routing-machine\";\n// import \"./MapComponent.css\";\n\n// // Fix for Leaflet icon path (Method 1)\n// delete L.Icon.Default.prototype._getIconUrl;\n\n// L.Icon.Default.mergeOptions({\n//   iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n//   iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n//   shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n// });\n\n// const MapComponent = ({ startLocation, pickupLocation, dropoffLocation }) => {\n//   // console.log(startLocation, pickupLocation, dropoffLocation);\n\n//   const mapRef = useRef(null); // Ref to the map container div\n//   const mapInstance = useRef(null); // Ref to store the leaflet map instance\n\n//   useEffect(() => {\n//     const createMap = async () => {\n//       if (mapRef.current) {\n//         // Check if the map container exists AND the map hasn't been initialized yet using L.DomUtil.get\n//         const existingMap = L.DomUtil.get(\"map\"); // Use L.DomUtil.get to check if map already exists\n\n//         if (!existingMap?._leaflet_id) {\n//           // Only initialize if the map hasn't been initialized on this element\n//           const map = L.map(mapRef.current, {\n//             center: [40.7128, -74.006],\n//             zoom: 8,\n//             scrollWheelZoom: false,\n//           });\n\n//           L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//             attribution:\n//               '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//           }).addTo(map);\n\n//           // Geocoding function (replace with a real geocoding service)\n//           const geocode = async (location) => {\n//             console.warn(\n//               \"Geocoding is not fully implemented -- using a dummy lat/lon value\"\n//             );\n//             switch (location) {\n//               case \"Miami, FL\":\n//                 return [25.7617, -80.1918]; // Miami coordinates\n//               case \"Orlando, FL\":\n//                 return [28.5383, -81.3792]; // Orlando coordinates\n//               case \"Jacksonville, FL\":\n//                 return [30.3322, -81.6557]; // Jacksonville coordinates\n//               default:\n//                 return null;\n//             }\n//           };\n\n//           const createRoutingControl = async () => {\n//             const startCoords = await geocode(startLocation);\n//             const pickupCoords = await geocode(pickupLocation);\n//             const dropoffCoords = await geocode(dropoffLocation);\n\n//             if (!startCoords || !pickupCoords || !dropoffCoords) {\n//               console.error(\"Could not geocode all locations\");\n//               return;\n//             }\n\n//             L.Routing.control({\n//               waypoints: [\n//                 L.latLng(startCoords),\n//                 L.latLng(pickupCoords),\n//                 L.latLng(dropoffCoords),\n//               ],\n//               routeWhileDragging: false,\n//               showAlternatives: false,\n//               serviceUrl: \"http://router.project-osrm.org/route/v1\",\n//             }).addTo(map);\n//           };\n\n//           await createRoutingControl(); // Make sure the routing is added after geocoding\n\n//           mapInstance.current = map; // Store the map instance in the ref\n//         } else {\n//           console.log(\"Map already initialized, skipping initialization.\");\n//         }\n//       }\n//     };\n\n//     createMap();\n\n//     return () => {\n//       if (mapInstance.current) {\n//         mapInstance.current.remove(); // Clean up the map on unmount\n//       }\n//     };\n//   }, [startLocation, pickupLocation, dropoffLocation]); // Dependencies for the useEffect\n\n//   return <div id=\"map\" ref={mapRef} style={{ height: \"500px\" }}></div>;\n// };\n\n// export default MapComponent;\n\n// import React, { useEffect, useRef } from \"react\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\n// import \"leaflet-routing-machine\";\n// import \"./MapComponent.css\";\n\n// // Fix for Leaflet icon path (Method 1)\n// delete L.Icon.Default.prototype._getIconUrl;\n\n// L.Icon.Default.mergeOptions({\n//   iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n//   iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n//   shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n// });\n\n// const MapComponent = ({ logsData, tripId }) => {\n//   const mapRef = useRef(null);\n//   const mapInstance = useRef(null);\n\n//   useEffect(() => {\n//     const createMap = async () => {\n//       if (!mapRef.current) return; // Handle null mapRef.current and only continue if present\n\n//       const existingMap = L.DomUtil.get(\"map\");\n//       if (!existingMap?._leaflet_id) {\n//         const map = L.map(mapRef.current, {\n//           center: [40.7128, -74.006],\n//           zoom: 8,\n//           scrollWheelZoom: false,\n//         });\n\n//         L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//           attribution:\n//             '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//         }).addTo(map);\n\n//         if (logsData != null && logsData.length > 0) {\n//           const startLog = logsData?.[0];\n//           const pickupLog = logsData?.[8];\n//           const dropoffLog = logsData?.[10];\n\n//           if (!startLog || !pickupLog || !dropoffLog) {\n//             console.error(\n//               \"Missing log entries for start, pickup, or dropoff location.  Length of the logs is:\",\n//               logsData.length\n//             );\n//             return;\n//           }\n\n//           const startCoords = [startLog.latitude, startLog.longitude];\n//           const pickupCoords = [pickupLog.latitude, pickupLog.longitude];\n//           const dropoffCoords = [dropoffLog.latitude, dropoffLog.longitude];\n\n//           // Create Routing Control\n//           L.Routing.control({\n//             waypoints: [\n//               L.latLng(startCoords),\n//               L.latLng(pickupCoords),\n//               L.latLng(dropoffCoords),\n//             ],\n//             routeWhileDragging: false,\n//             showAlternatives: false,\n//             serviceUrl: \"http://router.project-osrm.org/route/v1\",\n//           }).addTo(map);\n//         }\n\n//         mapInstance.current = map;\n//       } else {\n//         console.log(\"Map already initialized, skipping initialization.\");\n//       }\n//     };\n\n//     createMap();\n\n//     return () => {\n//       if (mapInstance.current) {\n//         mapInstance.current.remove();\n//         mapInstance.current = null;\n//       }\n//     };\n//   }, [logsData]);\n\n//   return <div id=\"map\" ref={mapRef} style={{ height: \"500px\" }}></div>;\n// };\n\n// export default MapComponent;\n\n// import React, { useEffect, useRef } from \"react\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\n// import \"leaflet-routing-machine\";\n// import \"./MapComponent.css\";\n\n// // Fix for Leaflet icon path (Method 1)\n// delete L.Icon.Default.prototype._getIconUrl;\n\n// L.Icon.Default.mergeOptions({\n//   iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n//   iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n//   shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n// });\n\n// const MapComponent = ({ logsData, tripId }) => {\n//   const mapRef = useRef(null);\n//   const mapInstance = useRef(null);\n\n//   useEffect(() => {\n//     const createMap = async () => {\n//       if (!mapRef.current) return; // Handle null mapRef.current and only continue if present\n\n//       const existingMap = L.DomUtil.get(\"map\");\n//       if (!existingMap?._leaflet_id) {\n//         const map = L.map(mapRef.current, {\n//           center: [40.7128, -74.006],\n//           zoom: 6, // Increased zoom out for better visibility of longer routes\n//           scrollWheelZoom: false,\n//         });\n\n//         L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//           attribution:\n//             '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//         }).addTo(map);\n\n//         if (logsData != null && logsData.length > 0) {\n//           const startLog = logsData?.[0];\n//           const pickupLog = logsData?.[9];\n//           const dropoffLog = logsData?.[10];\n\n//           if (!startLog || !pickupLog || !dropoffLog) {\n//             console.error(\n//               \"Missing log entries for start, pickup, or dropoff location.  Length of the logs is:\",\n//               logsData.length\n//             );\n//             return;\n//           }\n\n//           const startCoords = [startLog.latitude, startLog.longitude];\n//           const pickupCoords = [pickupLog.latitude, pickupLog.longitude];\n//           const dropoffCoords = [dropoffLog.latitude, dropoffLog.longitude];\n\n//           // Add intermediate location markers\n//           logsData\n//             .map((log, index) => {\n//               if (index !== 0 && index !== 9 && index !== 10) {\n//                 // Exclude start, pickup, and dropoff locations\n//                 return L.marker([log.latitude, log.longitude])\n//                   .addTo(map)\n//                   .bindPopup(\n//                     `${log.location}<br>Duty Status: ${log.duty_status}<br>Remarks: ${log.remarks}`\n//                   );\n//               }\n//               return null;\n//             })\n//             .filter((waypoint) => waypoint !== null);\n\n//           // Create Routing Control (with intermediate waypoints)\n//           L.Routing.control({\n//             waypoints: [\n//               L.latLng(startCoords),\n//               L.latLng(pickupCoords),\n//               L.latLng(dropoffCoords),\n//             ],\n//             routeWhileDragging: false,\n//             showAlternatives: false,\n//             serviceUrl: \"http://router.project-osrm.org/route/v1\",\n//           }).addTo(map);\n//         }\n\n//         mapInstance.current = map;\n//       } else {\n//         console.log(\"Map already initialized, skipping initialization.\");\n//       }\n//     };\n\n//     createMap();\n\n//     return () => {\n//       if (mapInstance.current) {\n//         mapInstance.current.remove();\n//         mapInstance.current = null;\n//       }\n//     };\n//   }, [logsData]);\n\n//   return <div id=\"map\" ref={mapRef} style={{ height: \"500px\" }}></div>;\n// };\n\n// export default MapComponent;\n\nimport React, { useEffect, useRef } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\nimport \"leaflet-routing-machine\";\nimport \"./MapComponent.css\";\n\n// Fix for Leaflet icon path (Method 1)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\")\n});\nconst MapComponent = ({\n  logsData,\n  tripId\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const mapInstance = useRef(null);\n  useEffect(() => {\n    const createMap = async () => {\n      if (!mapRef.current) return;\n      const existingMap = L.DomUtil.get(\"map\");\n      if (!(existingMap !== null && existingMap !== void 0 && existingMap._leaflet_id)) {\n        const map = L.map(mapRef.current, {\n          center: [40.7128, -74.006],\n          zoom: 6,\n          scrollWheelZoom: false\n        });\n        L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n          attribution: '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        }).addTo(map);\n        if (logsData != null && logsData.length > 0) {\n          const startLog = logsData[0];\n          const pickupLog = logsData[9];\n          const dropoffLog = logsData[10];\n          if (!startLog || !pickupLog || !dropoffLog) {\n            console.error(\"Missing log entries for start, pickup, or dropoff location. Length of the logs is:\", logsData.length);\n            return;\n          }\n          const startCoords = [startLog.latitude, startLog.longitude];\n          const pickupCoords = [pickupLog.latitude, pickupLog.longitude];\n          const dropoffCoords = [dropoffLog.latitude, dropoffLog.longitude];\n\n          // Create custom icons\n          const startIcon = L.icon({\n            iconUrl: \"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png\",\n            // green\n            shadowUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n            iconSize: [25, 41],\n            iconAnchor: [12, 41],\n            popupAnchor: [1, -34],\n            shadowSize: [41, 41]\n          });\n          const pickupIcon = L.icon({\n            iconUrl: \"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png\",\n            // blue\n            shadowUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n            iconSize: [25, 41],\n            iconAnchor: [12, 41],\n            popupAnchor: [1, -34],\n            shadowSize: [41, 41]\n          });\n          const dropoffIcon = L.icon({\n            iconUrl: \"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png\",\n            // red\n            shadowUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n            iconSize: [25, 41],\n            iconAnchor: [12, 41],\n            popupAnchor: [1, -34],\n            shadowSize: [41, 41]\n          });\n\n          // Add start, pickup, and dropoff markers\n          L.marker(startCoords, {\n            icon: startIcon\n          }).addTo(map).bindPopup(`${startLog.location}<br>Duty Status: ${startLog.duty_status}<br>Remarks: ${startLog.remarks}`);\n          L.marker(pickupCoords, {\n            icon: pickupIcon\n          }).addTo(map).bindPopup(`${pickupLog.location}<br>Duty Status: ${pickupLog.duty_status}<br>Remarks: ${pickupLog.remarks}`);\n          L.marker(dropoffCoords, {\n            icon: dropoffIcon\n          }).addTo(map).bindPopup(`${dropoffLog.location}<br>Duty Status: ${dropoffLog.duty_status}<br>Remarks: ${dropoffLog.remarks}`);\n\n          // Add intermediate location markers\n          logsData.forEach((log, index) => {\n            if (index !== 0 && index !== 9 && index !== 10) {\n              // Exclude start, pickup, and dropoff locations\n              L.marker([log.latitude, log.longitude]).addTo(map).bindPopup(`${log.location}<br>Duty Status: ${log.duty_status}<br>Remarks: ${log.remarks}`);\n            }\n          });\n\n          // Create Routing Control (with intermediate waypoints)\n          L.Routing.control({\n            waypoints: [L.latLng(startCoords), L.latLng(pickupCoords), L.latLng(dropoffCoords)],\n            routeWhileDragging: false,\n            showAlternatives: false,\n            serviceUrl: \"http://router.project-osrm.org/route/v1\"\n          }).addTo(map);\n        }\n        mapInstance.current = map;\n      } else {\n        console.log(\"Map already initialized, skipping initialization.\");\n      }\n    };\n    createMap();\n    return () => {\n      if (mapInstance.current) {\n        mapInstance.current.remove();\n        mapInstance.current = null;\n      }\n    };\n  }, [logsData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    ref: mapRef,\n    style: {\n      height: \"500px\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 443,\n    columnNumber: 10\n  }, this);\n};\n_s(MapComponent, \"jj23UBFmYip2SDX5FMmvO4fZUgM=\");\n_c = MapComponent;\nexport default MapComponent;\n\n// import React, { useEffect, useRef } from \"react\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\n// import \"leaflet-routing-machine\";\n// import \"./MapComponent.css\";\n\n// // Fix for Leaflet icon path (Method 1)\n// delete L.Icon.Default.prototype._getIconUrl;\n\n// L.Icon.Default.mergeOptions({\n//   iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n//   iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n//   shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n// });\n\n// const MapComponent = ({ logsData, tripId }) => {\n//   const mapRef = useRef(null);\n//   const mapInstance = useRef(null);\n\n//   useEffect(() => {\n//     const createMap = async () => {\n//       if (!mapRef.current) return;\n\n//       const existingMap = L.DomUtil.get(\"map\");\n//       if (!existingMap?._leaflet_id) {\n//         const map = L.map(mapRef.current, {\n//           center: [40.7128, -74.006],\n//           zoom: 6,\n//           scrollWheelZoom: false,\n//         });\n\n//         L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//           attribution:\n//             '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//         }).addTo(map);\n\n//         if (logsData != null && logsData.length > 0) {\n//           const startLog = logsData[0];\n//           const pickupLog = logsData[9];\n//           const dropoffLog = logsData[10];\n\n//           if (!startLog || !pickupLog || !dropoffLog) {\n//             console.error(\n//               \"Missing log entries for start, pickup, or dropoff location. Length of the logs is:\",\n//               logsData.length\n//             );\n//             return;\n//           }\n\n//           const startCoords = [startLog.latitude, startLog.longitude];\n//           const pickupCoords = [pickupLog.latitude, pickupLog.longitude];\n//           const dropoffCoords = [dropoffLog.latitude, dropoffLog.longitude];\n\n//           // Create custom icons\n//           const startIcon = L.icon({\n//             iconUrl:\n//               \"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png\", // green\n//             shadowUrl:\n//               \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n//             iconSize: [25, 41],\n//             iconAnchor: [12, 41],\n//             popupAnchor: [1, -34],\n//             shadowSize: [41, 41],\n//           });\n\n//           const pickupIcon = L.icon({\n//             iconUrl:\n//               \"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png\", // blue\n//             shadowUrl:\n//               \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n//             iconSize: [25, 41],\n//             iconAnchor: [12, 41],\n//             popupAnchor: [1, -34],\n//             shadowSize: [41, 41],\n//           });\n\n//           const dropoffIcon = L.icon({\n//             iconUrl:\n//               \"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png\", // red\n//             shadowUrl:\n//               \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n//             iconSize: [25, 41],\n//             iconAnchor: [12, 41],\n//             popupAnchor: [1, -34],\n//             shadowSize: [41, 41],\n//           });\n\n//           // Add start, pickup, and dropoff markers\n//           const startMarker = L.marker(startCoords, { icon: startIcon })\n//             .addTo(map)\n//             .bindPopup(\n//               `${startLog.location}<br>Duty Status: ${startLog.duty_status}<br>Remarks: ${startLog.remarks}`\n//             );\n\n//           const pickupMarker = L.marker(pickupCoords, { icon: pickupIcon })\n//             .addTo(map)\n//             .bindPopup(\n//               `${pickupLog.location}<br>Duty Status: ${pickupLog.duty_status}<br>Remarks: ${pickupLog.remarks}`\n//             );\n\n//           const dropoffMarker = L.marker(dropoffCoords, { icon: dropoffIcon })\n//             .addTo(map)\n//             .bindPopup(\n//               `${dropoffLog.location}<br>Duty Status: ${dropoffLog.duty_status}<br>Remarks: ${dropoffLog.remarks}`\n//             );\n\n//           // Open popup on mouseover, close on mouseout\n//           startMarker.on(\"mouseover\", function () {\n//             this.openPopup();\n//           });\n//           startMarker.on(\"mouseout\", function () {\n//             this.closePopup();\n//           });\n\n//           pickupMarker.on(\"mouseover\", function () {\n//             this.openPopup();\n//           });\n//           pickupMarker.on(\"mouseout\", function () {\n//             this.closePopup();\n//           });\n\n//           dropoffMarker.on(\"mouseover\", function () {\n//             this.openPopup();\n//           });\n//           dropoffMarker.on(\"mouseout\", function () {\n//             this.closePopup();\n//           });\n\n//           // Add intermediate location markers\n//           logsData.forEach((log, index) => {\n//             if (index !== 0 && index !== 9 && index !== 10) {\n//               // Exclude start, pickup, and dropoff locations\n//               const intermediateMarker = L.marker([log.latitude, log.longitude])\n//                 .addTo(map)\n//                 .bindPopup(\n//                   `${log.location}<br>Duty Status: ${log.duty_status}<br>Remarks: ${log.remarks}`\n//                 );\n\n//               intermediateMarker.on(\"mouseover\", function () {\n//                 this.openPopup();\n//               });\n//               intermediateMarker.on(\"mouseout\", function () {\n//                 this.closePopup();\n//               });\n//             }\n//           });\n\n//           // Create Waypoints including all Stops\n//           const waypoints = logsData.map((log) =>\n//             L.latLng(log.latitude, log.longitude)\n//           );\n\n//           // Create Routing Control (with intermediate waypoints)\n//           L.Routing.control({\n//             waypoints: waypoints,\n//             routeWhileDragging: false,\n//             showAlternatives: false,\n//             serviceUrl: \"http://router.project-osrm.org/route/v1\",\n//           }).addTo(map);\n//         }\n\n//         mapInstance.current = map;\n//       } else {\n//         console.log(\"Map already initialized, skipping initialization.\");\n//       }\n//     };\n\n//     createMap();\n\n//     return () => {\n//       if (mapInstance.current) {\n//         mapInstance.current.remove();\n//         mapInstance.current = null;\n//       }\n//     };\n//   }, [logsData]);\n\n//   return <div id=\"map\" ref={mapRef} style={{ height: \"500px\" }}></div>;\n// };\n\n// export default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useRef","L","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","MapComponent","logsData","tripId","_s","mapRef","mapInstance","createMap","current","existingMap","DomUtil","get","_leaflet_id","map","center","zoom","scrollWheelZoom","tileLayer","attribution","addTo","length","startLog","pickupLog","dropoffLog","console","error","startCoords","latitude","longitude","pickupCoords","dropoffCoords","startIcon","icon","iconSize","iconAnchor","popupAnchor","shadowSize","pickupIcon","dropoffIcon","marker","bindPopup","location","duty_status","remarks","forEach","log","index","Routing","control","waypoints","latLng","routeWhileDragging","showAlternatives","serviceUrl","remove","id","ref","style","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/imaadfakier/Desktop/incomes/primary/corporate/hiring_process_tracker/spotter_ai/spotter_ai_logbook/react-frontend/src/MapComponent.jsx"],"sourcesContent":["// import React, { useEffect, useRef } from \"react\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\n// import \"leaflet-routing-machine\";\n// import \"./MapComponent.css\";\n\n// // Fix for Leaflet icon path (Method 1)\n// delete L.Icon.Default.prototype._getIconUrl;\n\n// L.Icon.Default.mergeOptions({\n//   iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n//   iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n//   shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n// });\n\n// const MapComponent = ({ startLocation, pickupLocation, dropoffLocation }) => {\n//   // console.log(startLocation, pickupLocation, dropoffLocation);\n\n//   const mapRef = useRef(null); // Ref to the map container div\n//   const mapInstance = useRef(null); // Ref to store the leaflet map instance\n\n//   useEffect(() => {\n//     const createMap = async () => {\n//       if (mapRef.current) {\n//         // Check if the map container exists AND the map hasn't been initialized yet using L.DomUtil.get\n//         const existingMap = L.DomUtil.get(\"map\"); // Use L.DomUtil.get to check if map already exists\n\n//         if (!existingMap?._leaflet_id) {\n//           // Only initialize if the map hasn't been initialized on this element\n//           const map = L.map(mapRef.current, {\n//             center: [40.7128, -74.006],\n//             zoom: 8,\n//             scrollWheelZoom: false,\n//           });\n\n//           L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//             attribution:\n//               '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//           }).addTo(map);\n\n//           // Geocoding function (replace with a real geocoding service)\n//           const geocode = async (location) => {\n//             console.warn(\n//               \"Geocoding is not fully implemented -- using a dummy lat/lon value\"\n//             );\n//             switch (location) {\n//               case \"Miami, FL\":\n//                 return [25.7617, -80.1918]; // Miami coordinates\n//               case \"Orlando, FL\":\n//                 return [28.5383, -81.3792]; // Orlando coordinates\n//               case \"Jacksonville, FL\":\n//                 return [30.3322, -81.6557]; // Jacksonville coordinates\n//               default:\n//                 return null;\n//             }\n//           };\n\n//           const createRoutingControl = async () => {\n//             const startCoords = await geocode(startLocation);\n//             const pickupCoords = await geocode(pickupLocation);\n//             const dropoffCoords = await geocode(dropoffLocation);\n\n//             if (!startCoords || !pickupCoords || !dropoffCoords) {\n//               console.error(\"Could not geocode all locations\");\n//               return;\n//             }\n\n//             L.Routing.control({\n//               waypoints: [\n//                 L.latLng(startCoords),\n//                 L.latLng(pickupCoords),\n//                 L.latLng(dropoffCoords),\n//               ],\n//               routeWhileDragging: false,\n//               showAlternatives: false,\n//               serviceUrl: \"http://router.project-osrm.org/route/v1\",\n//             }).addTo(map);\n//           };\n\n//           await createRoutingControl(); // Make sure the routing is added after geocoding\n\n//           mapInstance.current = map; // Store the map instance in the ref\n//         } else {\n//           console.log(\"Map already initialized, skipping initialization.\");\n//         }\n//       }\n//     };\n\n//     createMap();\n\n//     return () => {\n//       if (mapInstance.current) {\n//         mapInstance.current.remove(); // Clean up the map on unmount\n//       }\n//     };\n//   }, [startLocation, pickupLocation, dropoffLocation]); // Dependencies for the useEffect\n\n//   return <div id=\"map\" ref={mapRef} style={{ height: \"500px\" }}></div>;\n// };\n\n// export default MapComponent;\n\n// import React, { useEffect, useRef } from \"react\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\n// import \"leaflet-routing-machine\";\n// import \"./MapComponent.css\";\n\n// // Fix for Leaflet icon path (Method 1)\n// delete L.Icon.Default.prototype._getIconUrl;\n\n// L.Icon.Default.mergeOptions({\n//   iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n//   iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n//   shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n// });\n\n// const MapComponent = ({ logsData, tripId }) => {\n//   const mapRef = useRef(null);\n//   const mapInstance = useRef(null);\n\n//   useEffect(() => {\n//     const createMap = async () => {\n//       if (!mapRef.current) return; // Handle null mapRef.current and only continue if present\n\n//       const existingMap = L.DomUtil.get(\"map\");\n//       if (!existingMap?._leaflet_id) {\n//         const map = L.map(mapRef.current, {\n//           center: [40.7128, -74.006],\n//           zoom: 8,\n//           scrollWheelZoom: false,\n//         });\n\n//         L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//           attribution:\n//             '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//         }).addTo(map);\n\n//         if (logsData != null && logsData.length > 0) {\n//           const startLog = logsData?.[0];\n//           const pickupLog = logsData?.[8];\n//           const dropoffLog = logsData?.[10];\n\n//           if (!startLog || !pickupLog || !dropoffLog) {\n//             console.error(\n//               \"Missing log entries for start, pickup, or dropoff location.  Length of the logs is:\",\n//               logsData.length\n//             );\n//             return;\n//           }\n\n//           const startCoords = [startLog.latitude, startLog.longitude];\n//           const pickupCoords = [pickupLog.latitude, pickupLog.longitude];\n//           const dropoffCoords = [dropoffLog.latitude, dropoffLog.longitude];\n\n//           // Create Routing Control\n//           L.Routing.control({\n//             waypoints: [\n//               L.latLng(startCoords),\n//               L.latLng(pickupCoords),\n//               L.latLng(dropoffCoords),\n//             ],\n//             routeWhileDragging: false,\n//             showAlternatives: false,\n//             serviceUrl: \"http://router.project-osrm.org/route/v1\",\n//           }).addTo(map);\n//         }\n\n//         mapInstance.current = map;\n//       } else {\n//         console.log(\"Map already initialized, skipping initialization.\");\n//       }\n//     };\n\n//     createMap();\n\n//     return () => {\n//       if (mapInstance.current) {\n//         mapInstance.current.remove();\n//         mapInstance.current = null;\n//       }\n//     };\n//   }, [logsData]);\n\n//   return <div id=\"map\" ref={mapRef} style={{ height: \"500px\" }}></div>;\n// };\n\n// export default MapComponent;\n\n// import React, { useEffect, useRef } from \"react\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\n// import \"leaflet-routing-machine\";\n// import \"./MapComponent.css\";\n\n// // Fix for Leaflet icon path (Method 1)\n// delete L.Icon.Default.prototype._getIconUrl;\n\n// L.Icon.Default.mergeOptions({\n//   iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n//   iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n//   shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n// });\n\n// const MapComponent = ({ logsData, tripId }) => {\n//   const mapRef = useRef(null);\n//   const mapInstance = useRef(null);\n\n//   useEffect(() => {\n//     const createMap = async () => {\n//       if (!mapRef.current) return; // Handle null mapRef.current and only continue if present\n\n//       const existingMap = L.DomUtil.get(\"map\");\n//       if (!existingMap?._leaflet_id) {\n//         const map = L.map(mapRef.current, {\n//           center: [40.7128, -74.006],\n//           zoom: 6, // Increased zoom out for better visibility of longer routes\n//           scrollWheelZoom: false,\n//         });\n\n//         L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//           attribution:\n//             '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//         }).addTo(map);\n\n//         if (logsData != null && logsData.length > 0) {\n//           const startLog = logsData?.[0];\n//           const pickupLog = logsData?.[9];\n//           const dropoffLog = logsData?.[10];\n\n//           if (!startLog || !pickupLog || !dropoffLog) {\n//             console.error(\n//               \"Missing log entries for start, pickup, or dropoff location.  Length of the logs is:\",\n//               logsData.length\n//             );\n//             return;\n//           }\n\n//           const startCoords = [startLog.latitude, startLog.longitude];\n//           const pickupCoords = [pickupLog.latitude, pickupLog.longitude];\n//           const dropoffCoords = [dropoffLog.latitude, dropoffLog.longitude];\n\n//           // Add intermediate location markers\n//           logsData\n//             .map((log, index) => {\n//               if (index !== 0 && index !== 9 && index !== 10) {\n//                 // Exclude start, pickup, and dropoff locations\n//                 return L.marker([log.latitude, log.longitude])\n//                   .addTo(map)\n//                   .bindPopup(\n//                     `${log.location}<br>Duty Status: ${log.duty_status}<br>Remarks: ${log.remarks}`\n//                   );\n//               }\n//               return null;\n//             })\n//             .filter((waypoint) => waypoint !== null);\n\n//           // Create Routing Control (with intermediate waypoints)\n//           L.Routing.control({\n//             waypoints: [\n//               L.latLng(startCoords),\n//               L.latLng(pickupCoords),\n//               L.latLng(dropoffCoords),\n//             ],\n//             routeWhileDragging: false,\n//             showAlternatives: false,\n//             serviceUrl: \"http://router.project-osrm.org/route/v1\",\n//           }).addTo(map);\n//         }\n\n//         mapInstance.current = map;\n//       } else {\n//         console.log(\"Map already initialized, skipping initialization.\");\n//       }\n//     };\n\n//     createMap();\n\n//     return () => {\n//       if (mapInstance.current) {\n//         mapInstance.current.remove();\n//         mapInstance.current = null;\n//       }\n//     };\n//   }, [logsData]);\n\n//   return <div id=\"map\" ref={mapRef} style={{ height: \"500px\" }}></div>;\n// };\n\n// export default MapComponent;\n\n\n\n\n\n\n\nimport React, { useEffect, useRef } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\nimport \"leaflet-routing-machine\";\nimport \"./MapComponent.css\";\n\n// Fix for Leaflet icon path (Method 1)\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n});\n\nconst MapComponent = ({ logsData, tripId }) => {\n  const mapRef = useRef(null);\n  const mapInstance = useRef(null);\n\n  useEffect(() => {\n    const createMap = async () => {\n      if (!mapRef.current) return;\n\n      const existingMap = L.DomUtil.get(\"map\");\n      if (!existingMap?._leaflet_id) {\n        const map = L.map(mapRef.current, {\n          center: [40.7128, -74.006],\n          zoom: 6,\n          scrollWheelZoom: false,\n        });\n\n        L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n          attribution:\n            '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n        }).addTo(map);\n\n        if (logsData != null && logsData.length > 0) {\n          const startLog = logsData[0];\n          const pickupLog = logsData[9];\n          const dropoffLog = logsData[10];\n\n          if (!startLog || !pickupLog || !dropoffLog) {\n            console.error(\n              \"Missing log entries for start, pickup, or dropoff location. Length of the logs is:\",\n              logsData.length\n            );\n            return;\n          }\n\n          const startCoords = [startLog.latitude, startLog.longitude];\n          const pickupCoords = [pickupLog.latitude, pickupLog.longitude];\n          const dropoffCoords = [dropoffLog.latitude, dropoffLog.longitude];\n\n          // Create custom icons\n          const startIcon = L.icon({\n            iconUrl: \"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png\", // green\n            shadowUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n            iconSize: [25, 41],\n            iconAnchor: [12, 41],\n            popupAnchor: [1, -34],\n            shadowSize: [41, 41],\n          });\n\n          const pickupIcon = L.icon({\n            iconUrl: \"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png\", // blue\n            shadowUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n            iconSize: [25, 41],\n            iconAnchor: [12, 41],\n            popupAnchor: [1, -34],\n            shadowSize: [41, 41],\n          });\n\n          const dropoffIcon = L.icon({\n            iconUrl: \"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png\", // red\n            shadowUrl: \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n            iconSize: [25, 41],\n            iconAnchor: [12, 41],\n            popupAnchor: [1, -34],\n            shadowSize: [41, 41],\n          });\n\n          // Add start, pickup, and dropoff markers\n          L.marker(startCoords, { icon: startIcon })\n            .addTo(map)\n            .bindPopup(\n              `${startLog.location}<br>Duty Status: ${startLog.duty_status}<br>Remarks: ${startLog.remarks}`\n            );\n\n          L.marker(pickupCoords, { icon: pickupIcon })\n            .addTo(map)\n            .bindPopup(\n              `${pickupLog.location}<br>Duty Status: ${pickupLog.duty_status}<br>Remarks: ${pickupLog.remarks}`\n            );\n\n          L.marker(dropoffCoords, { icon: dropoffIcon })\n            .addTo(map)\n            .bindPopup(\n              `${dropoffLog.location}<br>Duty Status: ${dropoffLog.duty_status}<br>Remarks: ${dropoffLog.remarks}`\n            );\n\n          // Add intermediate location markers\n          logsData.forEach((log, index) => {\n            if (index !== 0 && index !== 9 && index !== 10) {\n              // Exclude start, pickup, and dropoff locations\n              L.marker([log.latitude, log.longitude])\n                .addTo(map)\n                .bindPopup(\n                  `${log.location}<br>Duty Status: ${log.duty_status}<br>Remarks: ${log.remarks}`\n                );\n            }\n          });\n\n          // Create Routing Control (with intermediate waypoints)\n          L.Routing.control({\n            waypoints: [\n              L.latLng(startCoords),\n              L.latLng(pickupCoords),\n              L.latLng(dropoffCoords),\n            ],\n            routeWhileDragging: false,\n            showAlternatives: false,\n            serviceUrl: \"http://router.project-osrm.org/route/v1\",\n          }).addTo(map);\n        }\n\n        mapInstance.current = map;\n      } else {\n        console.log(\"Map already initialized, skipping initialization.\");\n      }\n    };\n\n    createMap();\n\n    return () => {\n      if (mapInstance.current) {\n        mapInstance.current.remove();\n        mapInstance.current = null;\n      }\n    };\n  }, [logsData]);\n\n  return <div id=\"map\" ref={mapRef} style={{ height: \"500px\" }}></div>;\n};\n\nexport default MapComponent;\n\n\n// import React, { useEffect, useRef } from \"react\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\n// import \"leaflet-routing-machine\";\n// import \"./MapComponent.css\";\n\n// // Fix for Leaflet icon path (Method 1)\n// delete L.Icon.Default.prototype._getIconUrl;\n\n// L.Icon.Default.mergeOptions({\n//   iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n//   iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n//   shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n// });\n\n// const MapComponent = ({ logsData, tripId }) => {\n//   const mapRef = useRef(null);\n//   const mapInstance = useRef(null);\n\n//   useEffect(() => {\n//     const createMap = async () => {\n//       if (!mapRef.current) return;\n\n//       const existingMap = L.DomUtil.get(\"map\");\n//       if (!existingMap?._leaflet_id) {\n//         const map = L.map(mapRef.current, {\n//           center: [40.7128, -74.006],\n//           zoom: 6,\n//           scrollWheelZoom: false,\n//         });\n\n//         L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//           attribution:\n//             '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//         }).addTo(map);\n\n//         if (logsData != null && logsData.length > 0) {\n//           const startLog = logsData[0];\n//           const pickupLog = logsData[9];\n//           const dropoffLog = logsData[10];\n\n//           if (!startLog || !pickupLog || !dropoffLog) {\n//             console.error(\n//               \"Missing log entries for start, pickup, or dropoff location. Length of the logs is:\",\n//               logsData.length\n//             );\n//             return;\n//           }\n\n//           const startCoords = [startLog.latitude, startLog.longitude];\n//           const pickupCoords = [pickupLog.latitude, pickupLog.longitude];\n//           const dropoffCoords = [dropoffLog.latitude, dropoffLog.longitude];\n\n//           // Create custom icons\n//           const startIcon = L.icon({\n//             iconUrl:\n//               \"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png\", // green\n//             shadowUrl:\n//               \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n//             iconSize: [25, 41],\n//             iconAnchor: [12, 41],\n//             popupAnchor: [1, -34],\n//             shadowSize: [41, 41],\n//           });\n\n//           const pickupIcon = L.icon({\n//             iconUrl:\n//               \"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png\", // blue\n//             shadowUrl:\n//               \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n//             iconSize: [25, 41],\n//             iconAnchor: [12, 41],\n//             popupAnchor: [1, -34],\n//             shadowSize: [41, 41],\n//           });\n\n//           const dropoffIcon = L.icon({\n//             iconUrl:\n//               \"https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png\", // red\n//             shadowUrl:\n//               \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png\",\n//             iconSize: [25, 41],\n//             iconAnchor: [12, 41],\n//             popupAnchor: [1, -34],\n//             shadowSize: [41, 41],\n//           });\n\n//           // Add start, pickup, and dropoff markers\n//           const startMarker = L.marker(startCoords, { icon: startIcon })\n//             .addTo(map)\n//             .bindPopup(\n//               `${startLog.location}<br>Duty Status: ${startLog.duty_status}<br>Remarks: ${startLog.remarks}`\n//             );\n\n//           const pickupMarker = L.marker(pickupCoords, { icon: pickupIcon })\n//             .addTo(map)\n//             .bindPopup(\n//               `${pickupLog.location}<br>Duty Status: ${pickupLog.duty_status}<br>Remarks: ${pickupLog.remarks}`\n//             );\n\n//           const dropoffMarker = L.marker(dropoffCoords, { icon: dropoffIcon })\n//             .addTo(map)\n//             .bindPopup(\n//               `${dropoffLog.location}<br>Duty Status: ${dropoffLog.duty_status}<br>Remarks: ${dropoffLog.remarks}`\n//             );\n\n//           // Open popup on mouseover, close on mouseout\n//           startMarker.on(\"mouseover\", function () {\n//             this.openPopup();\n//           });\n//           startMarker.on(\"mouseout\", function () {\n//             this.closePopup();\n//           });\n\n//           pickupMarker.on(\"mouseover\", function () {\n//             this.openPopup();\n//           });\n//           pickupMarker.on(\"mouseout\", function () {\n//             this.closePopup();\n//           });\n\n//           dropoffMarker.on(\"mouseover\", function () {\n//             this.openPopup();\n//           });\n//           dropoffMarker.on(\"mouseout\", function () {\n//             this.closePopup();\n//           });\n\n//           // Add intermediate location markers\n//           logsData.forEach((log, index) => {\n//             if (index !== 0 && index !== 9 && index !== 10) {\n//               // Exclude start, pickup, and dropoff locations\n//               const intermediateMarker = L.marker([log.latitude, log.longitude])\n//                 .addTo(map)\n//                 .bindPopup(\n//                   `${log.location}<br>Duty Status: ${log.duty_status}<br>Remarks: ${log.remarks}`\n//                 );\n\n//               intermediateMarker.on(\"mouseover\", function () {\n//                 this.openPopup();\n//               });\n//               intermediateMarker.on(\"mouseout\", function () {\n//                 this.closePopup();\n//               });\n//             }\n//           });\n\n//           // Create Waypoints including all Stops\n//           const waypoints = logsData.map((log) =>\n//             L.latLng(log.latitude, log.longitude)\n//           );\n\n//           // Create Routing Control (with intermediate waypoints)\n//           L.Routing.control({\n//             waypoints: waypoints,\n//             routeWhileDragging: false,\n//             showAlternatives: false,\n//             serviceUrl: \"http://router.project-osrm.org/route/v1\",\n//           }).addTo(map);\n//         }\n\n//         mapInstance.current = map;\n//       } else {\n//         console.log(\"Map already initialized, skipping initialization.\");\n//       }\n//     };\n\n//     createMap();\n\n//     return () => {\n//       if (mapInstance.current) {\n//         mapInstance.current.remove();\n//         mapInstance.current = null;\n//       }\n//     };\n//   }, [logsData]);\n\n//   return <div id=\"map\" ref={mapRef} style={{ height: \"500px\" }}></div>;\n// };\n\n// export default MapComponent;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AA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AAE,CACT5D,CAAC,CAAC6D,MAAM,CAACxB,WAAW,CAAC,EACrBrC,CAAC,CAAC6D,MAAM,CAACrB,YAAY,CAAC,EACtBxC,CAAC,CAAC6D,MAAM,CAACpB,aAAa,CAAC,CACxB;YACDqB,kBAAkB,EAAE,KAAK;YACzBC,gBAAgB,EAAE,KAAK;YACvBC,UAAU,EAAE;UACd,CAAC,CAAC,CAAClC,KAAK,CAACN,GAAG,CAAC;QACf;QAEAP,WAAW,CAACE,OAAO,GAAGK,GAAG;MAC3B,CAAC,MAAM;QACLW,OAAO,CAACqB,GAAG,CAAC,mDAAmD,CAAC;MAClE;IACF,CAAC;IAEDtC,SAAS,CAAC,CAAC;IAEX,OAAO,MAAM;MACX,IAAID,WAAW,CAACE,OAAO,EAAE;QACvBF,WAAW,CAACE,OAAO,CAAC8C,MAAM,CAAC,CAAC;QAC5BhD,WAAW,CAACE,OAAO,GAAG,IAAI;MAC5B;IACF,CAAC;EACH,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EAEd,oBAAOX,OAAA;IAAKgE,EAAE,EAAC,KAAK;IAACC,GAAG,EAAEnD,MAAO;IAACoD,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAQ;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACtE,CAAC;AAAC1D,EAAA,CA/HIH,YAAY;AAAA8D,EAAA,GAAZ9D,YAAY;AAiIlB,eAAeA,YAAY;;AAG3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AAAA,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}