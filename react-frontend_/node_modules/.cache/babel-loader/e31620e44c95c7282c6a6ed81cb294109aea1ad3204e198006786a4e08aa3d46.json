{"ast":null,"code":"var _jsxFileName = \"/Users/imaadfakier/Desktop/incomes/primary/corporate/hiring_process_tracker/spotter_ai/spotter_ai_logbook/react-frontend/src/MapComponent.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect } from \"react\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\n// import \"leaflet-routing-machine\";\n\n// // Fix for Leaflet icon path (Method 1)\n// delete L.Icon.Default.prototype._getIconUrl;\n\n// L.Icon.Default.mergeOptions({\n//   iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n//   iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n//   shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n// });\n\n// const MapComponent = ({\n//   startLocation,\n//   pickupLocation,\n//   dropoffLocation,\n//   // startLat,\n//   // startLon,\n//   // pickupLat,\n//   // pickupLon,\n//   // dropoffLat,\n//   // dropoffLon,\n// }) => {\n//   useEffect(() => {\n//     setTimeout(() => {\n//       const existingMap = L.DomUtil.get(\"map\");\n//       if (existingMap && existingMap._leaflet_id) {\n//         existingMap._leaflet_id = null;\n//       }\n\n//       const map = L.map(\"map\", {\n//         center: [40.7128, -74.006],\n//         zoom: 8,\n//         scrollWheelZoom: false,\n//       });\n\n//       L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//         attribution:\n//           '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//       }).addTo(map);\n\n//       // // Create markers for start, pickup, and dropoff locations\n//       // if (startLat && startLon) {\n//       //   L.marker([startLat, startLon])\n//       //     .addTo(map)\n//       //     .bindPopup(\"Start Location\")\n//       //     .openPopup();\n//       // }\n\n//       // if (pickupLat && pickupLon) {\n//       //   L.marker([pickupLat, pickupLon])\n//       //     .addTo(map)\n//       //     .bindPopup(\"Pickup Location\")\n//       //     .openPopup();\n//       // }\n\n//       // if (dropoffLat && dropoffLon) {\n//       //   L.marker([dropoffLat, dropoffLon])\n//       //     .addTo(map)\n//       //     .bindPopup(\"Dropoff Location\")\n//       //     .openPopup();\n//       // }\n\n//       // Geocoding function (replace with a real geocoding service)\n//       const geocode = async (location) => {\n//         console.warn(\n//           \"Geocoding is not fully implemented -- using a dummy lat/lon value\"\n//         );\n//         switch (location) {\n//           case \"Miami, FL\":\n//             return [40.7128, -74.006];\n//           case \"Orlando, FL\":\n//             return [41.8781, -87.6298];\n//           case \"Jacksonville, FL\":\n//             return [34.0522, -118.2437];\n//           default:\n//             return null;\n//         }\n//       };\n\n//       const createRoutingControl = async () => {\n//         const startCoords = await geocode(startLocation);\n//         const pickupCoords = await geocode(pickupLocation);\n//         const dropoffCoords = await geocode(dropoffLocation);\n\n//         if (!startCoords || !pickupCoords || !dropoffCoords) {\n//           console.error(\"Could not geocode all locations\");\n//           return;\n//         }\n\n//         L.Routing.control({\n//           waypoints: [\n//             L.latLng(startCoords),\n//             L.latLng(pickupCoords),\n//             L.latLng(dropoffCoords),\n//           ],\n//           routeWhileDragging: false,\n//           showAlternatives: false,\n//           serviceUrl: \"http://router.project-osrm.org/route/v1\",\n//         }).addTo(map);\n//       };\n\n//       createRoutingControl();\n\n//       return () => {\n//         map.remove();\n//       };\n//     }, 0);\n//   }, [\n//     startLocation,\n//     pickupLocation,\n//     dropoffLocation,\n//     // startLat,\n//     // startLon,\n//     // pickupLat,\n//     // pickupLon,\n//     // dropoffLat,\n//     // dropoffLon,\n//   ]);\n\n//   return <div id=\"map\" style={{ height: \"500px\" }}></div>;\n// };\n\n// export default MapComponent;\n\nimport React, { useEffect } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-routing-machine/dist/leaflet-routing-machine.css';\nimport 'leaflet-routing-machine';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = ({\n  startLocation,\n  pickupLocation,\n  dropoffLocation\n}) => {\n  _s();\n  useEffect(() => {\n    const map = L.map('map', {\n      center: [40.7128, -74.0060],\n      zoom: 8,\n      scrollWheelZoom: false\n    });\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    }).addTo(map);\n\n    // Geocoding function (replace with a real geocoding service)\n    const geocode = async location => {\n      // Replace this with a call to a real geocoding service like Nominatim\n      // For example:\n      // const response = await fetch(`https://nominatim.openstreetmap.org/search?q=${location}&format=json`);\n      // const data = await response.json();\n      // if (data.length > 0) {\n      //   return [data[0].lat, data[0].lon];\n      // }\n      console.warn(\"Geocoding is not fully implemented -- using a dummy lat/lon value\");\n      switch (location) {\n        case \"Miami, FL \":\n          return [40.7128, -74.0060];\n        case \"Chicago, IL\":\n          return [41.8781, -87.6298];\n        case \"Los Angeles, CA\":\n          return [34.0522, -118.2437];\n        default:\n          return null;\n      }\n      return null; // Or handle the error appropriately\n    };\n    const createRoutingControl = async () => {\n      const startCoords = await geocode(startLocation);\n      const pickupCoords = await geocode(pickupLocation);\n      const dropoffCoords = await geocode(dropoffLocation);\n      if (!startCoords || !pickupCoords || !dropoffCoords) {\n        console.error('Could not geocode all locations');\n        return;\n      }\n      L.Routing.control({\n        waypoints: [L.latLng(startCoords), L.latLng(pickupCoords), L.latLng(dropoffCoords)],\n        routeWhileDragging: false,\n        showAlternatives: false\n        //If you want to use OSRM, uncomment this line and comment out the mapbox API call\n        //serviceUrl: 'http://router.project-osrm.org/route/v1'\n      }).addTo(map);\n    };\n    createRoutingControl();\n    return () => {\n      map.remove();\n    };\n  }, [startLocation, pickupLocation, dropoffLocation]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      height: '500px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 12\n  }, this);\n};\n_s(MapComponent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","L","jsxDEV","_jsxDEV","MapComponent","startLocation","pickupLocation","dropoffLocation","_s","map","center","zoom","scrollWheelZoom","tileLayer","attribution","addTo","geocode","location","console","warn","createRoutingControl","startCoords","pickupCoords","dropoffCoords","error","Routing","control","waypoints","latLng","routeWhileDragging","showAlternatives","remove","id","style","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/imaadfakier/Desktop/incomes/primary/corporate/hiring_process_tracker/spotter_ai/spotter_ai_logbook/react-frontend/src/MapComponent.jsx"],"sourcesContent":["// import React, { useEffect } from \"react\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\n// import \"leaflet-routing-machine\";\n\n// // Fix for Leaflet icon path (Method 1)\n// delete L.Icon.Default.prototype._getIconUrl;\n\n// L.Icon.Default.mergeOptions({\n//   iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n//   iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n//   shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n// });\n\n// const MapComponent = ({\n//   startLocation,\n//   pickupLocation,\n//   dropoffLocation,\n//   // startLat,\n//   // startLon,\n//   // pickupLat,\n//   // pickupLon,\n//   // dropoffLat,\n//   // dropoffLon,\n// }) => {\n//   useEffect(() => {\n//     setTimeout(() => {\n//       const existingMap = L.DomUtil.get(\"map\");\n//       if (existingMap && existingMap._leaflet_id) {\n//         existingMap._leaflet_id = null;\n//       }\n\n//       const map = L.map(\"map\", {\n//         center: [40.7128, -74.006],\n//         zoom: 8,\n//         scrollWheelZoom: false,\n//       });\n\n//       L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//         attribution:\n//           '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n//       }).addTo(map);\n\n//       // // Create markers for start, pickup, and dropoff locations\n//       // if (startLat && startLon) {\n//       //   L.marker([startLat, startLon])\n//       //     .addTo(map)\n//       //     .bindPopup(\"Start Location\")\n//       //     .openPopup();\n//       // }\n\n//       // if (pickupLat && pickupLon) {\n//       //   L.marker([pickupLat, pickupLon])\n//       //     .addTo(map)\n//       //     .bindPopup(\"Pickup Location\")\n//       //     .openPopup();\n//       // }\n\n//       // if (dropoffLat && dropoffLon) {\n//       //   L.marker([dropoffLat, dropoffLon])\n//       //     .addTo(map)\n//       //     .bindPopup(\"Dropoff Location\")\n//       //     .openPopup();\n//       // }\n\n//       // Geocoding function (replace with a real geocoding service)\n//       const geocode = async (location) => {\n//         console.warn(\n//           \"Geocoding is not fully implemented -- using a dummy lat/lon value\"\n//         );\n//         switch (location) {\n//           case \"Miami, FL\":\n//             return [40.7128, -74.006];\n//           case \"Orlando, FL\":\n//             return [41.8781, -87.6298];\n//           case \"Jacksonville, FL\":\n//             return [34.0522, -118.2437];\n//           default:\n//             return null;\n//         }\n//       };\n\n//       const createRoutingControl = async () => {\n//         const startCoords = await geocode(startLocation);\n//         const pickupCoords = await geocode(pickupLocation);\n//         const dropoffCoords = await geocode(dropoffLocation);\n\n//         if (!startCoords || !pickupCoords || !dropoffCoords) {\n//           console.error(\"Could not geocode all locations\");\n//           return;\n//         }\n\n//         L.Routing.control({\n//           waypoints: [\n//             L.latLng(startCoords),\n//             L.latLng(pickupCoords),\n//             L.latLng(dropoffCoords),\n//           ],\n//           routeWhileDragging: false,\n//           showAlternatives: false,\n//           serviceUrl: \"http://router.project-osrm.org/route/v1\",\n//         }).addTo(map);\n//       };\n\n//       createRoutingControl();\n\n//       return () => {\n//         map.remove();\n//       };\n//     }, 0);\n//   }, [\n//     startLocation,\n//     pickupLocation,\n//     dropoffLocation,\n//     // startLat,\n//     // startLon,\n//     // pickupLat,\n//     // pickupLon,\n//     // dropoffLat,\n//     // dropoffLon,\n//   ]);\n\n//   return <div id=\"map\" style={{ height: \"500px\" }}></div>;\n// };\n\n// export default MapComponent;\n\n\nimport React, { useEffect } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-routing-machine/dist/leaflet-routing-machine.css';\nimport 'leaflet-routing-machine';\n\nconst MapComponent = ({ startLocation, pickupLocation, dropoffLocation }) => {\n    useEffect(() => {\n        const map = L.map('map', {\n            center: [40.7128, -74.0060],\n            zoom: 8,\n            scrollWheelZoom: false,\n        });\n\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n            attribution: '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        }).addTo(map);\n\n        // Geocoding function (replace with a real geocoding service)\n        const geocode = async (location) => {\n            // Replace this with a call to a real geocoding service like Nominatim\n            // For example:\n            // const response = await fetch(`https://nominatim.openstreetmap.org/search?q=${location}&format=json`);\n            // const data = await response.json();\n            // if (data.length > 0) {\n            //   return [data[0].lat, data[0].lon];\n            // }\n            console.warn(\"Geocoding is not fully implemented -- using a dummy lat/lon value\");\n            switch(location) {\n              case \"Miami, FL \":\n                return [40.7128, -74.0060];\n              case \"Chicago, IL\":\n                return [41.8781, -87.6298];\n              case \"Los Angeles, CA\":\n                return [34.0522, -118.2437];\n              default:\n                return null;\n            }\n\n            return null; // Or handle the error appropriately\n        };\n\n        const createRoutingControl = async () => {\n            const startCoords = await geocode(startLocation);\n            const pickupCoords = await geocode(pickupLocation);\n            const dropoffCoords = await geocode(dropoffLocation);\n\n            if (!startCoords || !pickupCoords || !dropoffCoords) {\n                console.error('Could not geocode all locations');\n                return;\n            }\n\n            L.Routing.control({\n                waypoints: [\n                    L.latLng(startCoords),\n                    L.latLng(pickupCoords),\n                    L.latLng(dropoffCoords)\n                ],\n                routeWhileDragging: false,\n                showAlternatives: false,\n                //If you want to use OSRM, uncomment this line and comment out the mapbox API call\n                //serviceUrl: 'http://router.project-osrm.org/route/v1'\n            }).addTo(map);\n        };\n\n        createRoutingControl();\n\n        return () => {\n            map.remove();\n        };\n    }, [startLocation, pickupLocation, dropoffLocation]);\n\n    return <div id=\"map\" style={{ height: '500px' }}></div>;\n};\n\nexport default MapComponent;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,0BAA0B;AACjC,OAAO,0DAA0D;AACjE,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,YAAY,GAAGA,CAAC;EAAEC,aAAa;EAAEC,cAAc;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EACzER,SAAS,CAAC,MAAM;IACZ,MAAMS,GAAG,GAAGR,CAAC,CAACQ,GAAG,CAAC,KAAK,EAAE;MACrBC,MAAM,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC;MAC3BC,IAAI,EAAE,CAAC;MACPC,eAAe,EAAE;IACrB,CAAC,CAAC;IAEFX,CAAC,CAACY,SAAS,CAAC,oDAAoD,EAAE;MAC9DC,WAAW,EAAE;IACjB,CAAC,CAAC,CAACC,KAAK,CAACN,GAAG,CAAC;;IAEb;IACA,MAAMO,OAAO,GAAG,MAAOC,QAAQ,IAAK;MAChC;MACA;MACA;MACA;MACA;MACA;MACA;MACAC,OAAO,CAACC,IAAI,CAAC,mEAAmE,CAAC;MACjF,QAAOF,QAAQ;QACb,KAAK,YAAY;UACf,OAAO,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC;QAC5B,KAAK,aAAa;UAChB,OAAO,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC;QAC5B,KAAK,iBAAiB;UACpB,OAAO,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;QAC7B;UACE,OAAO,IAAI;MACf;MAEA,OAAO,IAAI,CAAC,CAAC;IACjB,CAAC;IAED,MAAMG,oBAAoB,GAAG,MAAAA,CAAA,KAAY;MACrC,MAAMC,WAAW,GAAG,MAAML,OAAO,CAACX,aAAa,CAAC;MAChD,MAAMiB,YAAY,GAAG,MAAMN,OAAO,CAACV,cAAc,CAAC;MAClD,MAAMiB,aAAa,GAAG,MAAMP,OAAO,CAACT,eAAe,CAAC;MAEpD,IAAI,CAACc,WAAW,IAAI,CAACC,YAAY,IAAI,CAACC,aAAa,EAAE;QACjDL,OAAO,CAACM,KAAK,CAAC,iCAAiC,CAAC;QAChD;MACJ;MAEAvB,CAAC,CAACwB,OAAO,CAACC,OAAO,CAAC;QACdC,SAAS,EAAE,CACP1B,CAAC,CAAC2B,MAAM,CAACP,WAAW,CAAC,EACrBpB,CAAC,CAAC2B,MAAM,CAACN,YAAY,CAAC,EACtBrB,CAAC,CAAC2B,MAAM,CAACL,aAAa,CAAC,CAC1B;QACDM,kBAAkB,EAAE,KAAK;QACzBC,gBAAgB,EAAE;QAClB;QACA;MACJ,CAAC,CAAC,CAACf,KAAK,CAACN,GAAG,CAAC;IACjB,CAAC;IAEDW,oBAAoB,CAAC,CAAC;IAEtB,OAAO,MAAM;MACTX,GAAG,CAACsB,MAAM,CAAC,CAAC;IAChB,CAAC;EACL,CAAC,EAAE,CAAC1B,aAAa,EAAEC,cAAc,EAAEC,eAAe,CAAC,CAAC;EAEpD,oBAAOJ,OAAA;IAAK6B,EAAE,EAAC,KAAK;IAACC,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAQ;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC3D,CAAC;AAAC9B,EAAA,CAnEIJ,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AAqElB,eAAeA,YAAY;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}