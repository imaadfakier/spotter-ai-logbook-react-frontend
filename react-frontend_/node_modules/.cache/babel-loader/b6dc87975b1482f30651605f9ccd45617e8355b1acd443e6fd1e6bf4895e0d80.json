{"ast":null,"code":"var _jsxFileName = \"/Users/imaadfakier/Desktop/incomes/primary/corporate/hiring_process_tracker/spotter_ai/spotter_ai_logbook/react-frontend/src/MapComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\nimport \"leaflet-routing-machine\";\nimport \"./MapComponent.css\"; // Import the custom CSS\n\n// Fix for Leaflet icon path (Method 1)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\")\n});\nconst MapComponent = ({\n  startLocation,\n  pickupLocation,\n  dropoffLocation\n}) => {\n  _s();\n  const mapRef = useRef(null); // Ref to the map container div\n  const mapInstance = useRef(null); // Ref to store the leaflet map instance\n  const [isMapReady, setIsMapReady] = useState(false); // State to track map readiness\n\n  useEffect(() => {\n    const createMap = async () => {\n      if (mapRef.current && !mapInstance.current) {\n        // Check if the map container exists AND the map hasn't been initialized yet\n        const map = L.map(mapRef.current, {\n          center: [40.7128, -74.006],\n          zoom: 8,\n          scrollWheelZoom: false\n        });\n        L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n          attribution: '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        }).addTo(map);\n        mapInstance.current = map; // Store the map instance in the ref\n        setIsMapReady(true); // Set map ready state\n      }\n    };\n    createMap();\n    return () => {\n      if (mapInstance.current) {\n        mapInstance.current.remove(); // Clean up the map on unmount\n      }\n    };\n  }, []); // Run only once on mount\n\n  useEffect(() => {\n    const createRoutingControl = async () => {\n      if (isMapReady) {\n        // Geocoding function (replace with a real geocoding service)\n        const geocode = async location => {\n          console.warn(\"Geocoding is not fully implemented -- using a dummy lat/lon value\");\n          switch (location) {\n            case \"Miami, FL\":\n              return [25.7617, -80.1918];\n            // Miami coordinates\n            case \"Orlando, FL\":\n              return [28.5383, -81.3792];\n            // Orlando coordinates\n            case \"Jacksonville, FL\":\n              return [30.3322, -81.6557];\n            // Jacksonville coordinates\n            default:\n              return null;\n          }\n        };\n        const startCoords = await geocode(startLocation);\n        const pickupCoords = await geocode(pickupLocation);\n        const dropoffCoords = await geocode(dropoffLocation);\n        if (!startCoords || !pickupCoords || !dropoffCoords) {\n          console.error(\"Could not geocode all locations\");\n          return;\n        }\n        L.Routing.control({\n          waypoints: [L.latLng(startCoords), L.latLng(pickupCoords), L.latLng(dropoffCoords)],\n          routeWhileDragging: false,\n          showAlternatives: false,\n          serviceUrl: \"http://router.project-osrm.org/route/v1\"\n        }).addTo(mapInstance.current);\n      }\n    };\n    createRoutingControl();\n  }, [isMapReady, startLocation, pickupLocation, dropoffLocation]); // Run when map ready state is true or locations change\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    ref: mapRef,\n    style: {\n      height: \"500px\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 10\n  }, this);\n};\n_s(MapComponent, \"e6wIUfyZ7J4uiueZ3c9IoZK7vgE=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","L","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","MapComponent","startLocation","pickupLocation","dropoffLocation","_s","mapRef","mapInstance","isMapReady","setIsMapReady","createMap","current","map","center","zoom","scrollWheelZoom","tileLayer","attribution","addTo","remove","createRoutingControl","geocode","location","console","warn","startCoords","pickupCoords","dropoffCoords","error","Routing","control","waypoints","latLng","routeWhileDragging","showAlternatives","serviceUrl","id","ref","style","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/imaadfakier/Desktop/incomes/primary/corporate/hiring_process_tracker/spotter_ai/spotter_ai_logbook/react-frontend/src/MapComponent.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\nimport \"leaflet-routing-machine\";\nimport \"./MapComponent.css\"; // Import the custom CSS\n\n// Fix for Leaflet icon path (Method 1)\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n});\n\nconst MapComponent = ({\n  startLocation,\n  pickupLocation,\n  dropoffLocation,\n}) => {\n  const mapRef = useRef(null); // Ref to the map container div\n  const mapInstance = useRef(null); // Ref to store the leaflet map instance\n  const [isMapReady, setIsMapReady] = useState(false); // State to track map readiness\n\n  useEffect(() => {\n    const createMap = async () => {\n      if (mapRef.current && !mapInstance.current) {\n        // Check if the map container exists AND the map hasn't been initialized yet\n        const map = L.map(mapRef.current, {\n          center: [40.7128, -74.006],\n          zoom: 8,\n          scrollWheelZoom: false,\n        });\n\n        L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n          attribution:\n            '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n        }).addTo(map);\n\n        mapInstance.current = map; // Store the map instance in the ref\n        setIsMapReady(true); // Set map ready state\n      }\n    };\n\n    createMap();\n\n    return () => {\n      if (mapInstance.current) {\n        mapInstance.current.remove(); // Clean up the map on unmount\n      }\n    };\n  }, []); // Run only once on mount\n\n  useEffect(() => {\n    const createRoutingControl = async () => {\n      if (isMapReady) {\n        // Geocoding function (replace with a real geocoding service)\n        const geocode = async (location) => {\n          console.warn(\n            \"Geocoding is not fully implemented -- using a dummy lat/lon value\"\n          );\n          switch (location) {\n            case \"Miami, FL\":\n              return [25.7617, -80.1918]; // Miami coordinates\n            case \"Orlando, FL\":\n              return [28.5383, -81.3792]; // Orlando coordinates\n            case \"Jacksonville, FL\":\n              return [30.3322, -81.6557]; // Jacksonville coordinates\n            default:\n              return null;\n          }\n        };\n\n        const startCoords = await geocode(startLocation);\n        const pickupCoords = await geocode(pickupLocation);\n        const dropoffCoords = await geocode(dropoffLocation);\n\n        if (!startCoords || !pickupCoords || !dropoffCoords) {\n          console.error(\"Could not geocode all locations\");\n          return;\n        }\n\n        L.Routing.control({\n          waypoints: [\n            L.latLng(startCoords),\n            L.latLng(pickupCoords),\n            L.latLng(dropoffCoords),\n          ],\n          routeWhileDragging: false,\n          showAlternatives: false,\n          serviceUrl: \"http://router.project-osrm.org/route/v1\",\n        }).addTo(mapInstance.current);\n      }\n    };\n\n    createRoutingControl();\n  }, [isMapReady, startLocation, pickupLocation, dropoffLocation]); // Run when map ready state is true or locations change\n\n  return <div id=\"map\" ref={mapRef} style={{ height: \"500px\" }}></div>;\n};\n\nexport default MapComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}