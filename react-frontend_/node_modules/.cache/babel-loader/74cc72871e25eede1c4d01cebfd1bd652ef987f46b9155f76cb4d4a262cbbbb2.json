{"ast":null,"code":"var _jsxFileName = \"/Users/imaadfakier/Desktop/incomes/primary/corporate/hiring_process_tracker/spotter_ai/spotter_ai_logbook/react-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport MapComponent from \"./MapComponent\";\nimport \"./App.css\";\nimport DailyLogSheet from \"./DailyLogSheet\";\nimport TripForm from \"./TripForm\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [logEntries, setLogEntries] = useState([]);\n  const [tripDetails, setTripDetails] = useState(null);\n  const handleFormSubmit = async tripData => {\n    // Convert camelCase keys to snake_case\n    const convertToSnakeCase = obj => {\n      const newObj = {};\n      for (const key in obj) {\n        if (obj.hasOwnProperty(key)) {\n          const snakeCaseKey = key.replace(/([A-Z])/g, \"_$1\").toLowerCase();\n          newObj[snakeCaseKey] = obj[key];\n        }\n      }\n      return newObj;\n    };\n    const apiUrl = \"http://localhost:8000/api/trips/\"; //Django server endpoint\n    try {\n      // First, check if trip exists\n      const checkTripResponse = await fetch(`${apiUrl}check_existing/`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(convertToSnakeCase(tripData))\n      });\n      if (!checkTripResponse.ok) {\n        console.error(\"Error checking existing trip:\", checkTripResponse.status);\n        return;\n      }\n      const checkTripData = await checkTripResponse.json();\n      let tripId;\n      if (checkTripData.exists) {\n        tripId = checkTripData.trip.id;\n        setTripDetails(checkTripData.trip);\n      } else {\n        // First, create the trip in the backend\n        const response = await fetch(`${apiUrl}`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(tripData)\n        });\n        if (!response.ok) {\n          console.error(\"Error creating trip:\", response.status);\n          return;\n        }\n        const newTrip = await response.json();\n        tripId = newTrip.id;\n        setTripDetails(newTrip);\n      }\n\n      // Then, generate logs for the trip\n      const logsResponse = await fetch(`${apiUrl}${tripId}/generate_logs/`, {\n        method: \"POST\"\n      });\n      if (!logsResponse.ok) {\n        console.error(\"Error generating logs:\", logsResponse.status);\n        return;\n      }\n\n      // Finally, fetch the generated logs\n      const logsDataResponse = await fetch(`${apiUrl}${tripId}/logs/`);\n      if (!logsDataResponse.ok) {\n        console.error(\"Error fetching logs:\", logsDataResponse.status);\n        return;\n      }\n      const logsData = await logsDataResponse.json();\n      setLogEntries(logsData);\n    } catch (error) {\n      console.error(\"There was an issue\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Trucker Logbook App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(TripForm, {\n          onSubmit: handleFormSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: tripDetails && /*#__PURE__*/_jsxDEV(MapComponent, {\n          startLocation: tripDetails.startLocation,\n          pickupLocation: tripDetails.pickupLocation,\n          dropoffLocation: tripDetails.dropoffLocation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: logEntries.length > 0 && /*#__PURE__*/_jsxDEV(DailyLogSheet, {\n          logEntries: logEntries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"auafVyRLewD+e81qSEY17OGcV9Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MapComponent","DailyLogSheet","TripForm","Container","Row","Col","jsxDEV","_jsxDEV","App","_s","logEntries","setLogEntries","tripDetails","setTripDetails","handleFormSubmit","tripData","convertToSnakeCase","obj","newObj","key","hasOwnProperty","snakeCaseKey","replace","toLowerCase","apiUrl","checkTripResponse","fetch","method","headers","body","JSON","stringify","ok","console","error","status","checkTripData","json","tripId","exists","trip","id","response","newTrip","logsResponse","logsDataResponse","logsData","children","fileName","_jsxFileName","lineNumber","columnNumber","md","onSubmit","startLocation","pickupLocation","dropoffLocation","length","_c","$RefreshReg$"],"sources":["/Users/imaadfakier/Desktop/incomes/primary/corporate/hiring_process_tracker/spotter_ai/spotter_ai_logbook/react-frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport MapComponent from \"./MapComponent\";\nimport \"./App.css\";\nimport DailyLogSheet from \"./DailyLogSheet\";\nimport TripForm from \"./TripForm\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nfunction App() {\n  const [logEntries, setLogEntries] = useState([]);\n  const [tripDetails, setTripDetails] = useState(null);\n\n  const handleFormSubmit = async (tripData) => {\n    // Convert camelCase keys to snake_case\n    const convertToSnakeCase = (obj) => {\n      const newObj = {};\n      for (const key in obj) {\n        if (obj.hasOwnProperty(key)) {\n          const snakeCaseKey = key.replace(/([A-Z])/g, \"_$1\").toLowerCase();\n          newObj[snakeCaseKey] = obj[key];\n        }\n      }\n      return newObj;\n    };\n\n    const apiUrl = \"http://localhost:8000/api/trips/\"; //Django server endpoint\n    try {\n      // First, check if trip exists\n      const checkTripResponse = await fetch(`${apiUrl}check_existing/`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(convertToSnakeCase(tripData)),\n      });\n\n      if (!checkTripResponse.ok) {\n        console.error(\n          \"Error checking existing trip:\",\n          checkTripResponse.status\n        );\n        return;\n      }\n      const checkTripData = await checkTripResponse.json();\n\n      let tripId;\n      if (checkTripData.exists) {\n        tripId = checkTripData.trip.id;\n        setTripDetails(checkTripData.trip);\n      } else {\n        // First, create the trip in the backend\n        const response = await fetch(`${apiUrl}`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(tripData),\n        });\n\n        if (!response.ok) {\n          console.error(\"Error creating trip:\", response.status);\n          return;\n        }\n        const newTrip = await response.json();\n        tripId = newTrip.id;\n        setTripDetails(newTrip);\n      }\n\n      // Then, generate logs for the trip\n      const logsResponse = await fetch(`${apiUrl}${tripId}/generate_logs/`, {\n        method: \"POST\",\n      });\n\n      if (!logsResponse.ok) {\n        console.error(\"Error generating logs:\", logsResponse.status);\n        return;\n      }\n\n      // Finally, fetch the generated logs\n      const logsDataResponse = await fetch(`${apiUrl}${tripId}/logs/`);\n      if (!logsDataResponse.ok) {\n        console.error(\"Error fetching logs:\", logsDataResponse.status);\n        return;\n      }\n\n      const logsData = await logsDataResponse.json();\n      setLogEntries(logsData);\n    } catch (error) {\n      console.error(\"There was an issue\", error);\n    }\n  };\n\n  return (\n    <Container>\n      <h1>Trucker Logbook App</h1>\n      <Row>\n        <Col md={6}>\n          <TripForm onSubmit={handleFormSubmit} />\n        </Col>\n        <Col md={6}>\n          {tripDetails && (\n            <MapComponent\n              startLocation={tripDetails.startLocation}\n              pickupLocation={tripDetails.pickupLocation}\n              dropoffLocation={tripDetails.dropoffLocation}\n            />\n          )}\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          {logEntries.length > 0 && <DailyLogSheet logEntries={logEntries} />}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}